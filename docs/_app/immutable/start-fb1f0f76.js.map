{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAIA,SAAO;AAGX,IAAI,SAAS;AAGb,mBAAmB,OAAO;AACzBA,WAAO,MAAM;AACb,WAAS,MAAM,UAAUA;AAC1B;;;;;yCCoC6C,IAAO;AAA3B,4BAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sHAAS,KAAO;AAA3B,mDAAW,KAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yCAVQ,IAAO;AAA3B,4BAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sHAAS,KAAO;;;;AAA3B,mDAAW,KAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yCAMU,IAAO;AAA3B,4BAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sHAAS,KAAO;AAA3B,mDAAW,KAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yCAJQ,IAAO;AAA3B,4BAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sHAAS,KAAO;;;;AAA3B,mDAAW,KAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yCACS,IAAO;AAA3B,4BAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sHAAS,KAAO;AAA3B,mDAAW,KAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAFjC,gBAAW;AAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iBAcZ,IAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADf,uBAIK;;;;;UAHC,KAAS;;;;;;;;;;;;;;;;;;;;;;;;;eACZ,IAAK;AAAA;;4BAAL,IAAK;AAAA;;;;;;oBAAL,KAAK;AAAA;;;;;;;;;;;;;;;;AAjBJ,gBAAW;AAAC;;;;;kBAcZ,IAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAAP,KAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA5CA,WAAM;QACN,SAAI;QAEJ,4BAAU;AACV,kBAAU,SAAI;AACd,kBAAU,SAAI;AACd,kBAAU,SAAI;AAEzB,aAAW,cAAc,MAAM;AAG/B,cAAY,OAAO,KAAK,MAAM;AAE1B,gBAAU;AACV,kBAAY;AACZ,cAAQ;AAEZ,UAAO;AACA,wBAAc,OAAO,KAAK,UAAS;UACpC,SAAO;AACV,oCAAY,IAAI;AAChB,gCAAQ,SAAS,SAAS,eAAe;AAAA;;AAI3C,8BAAU,IAAI;WACP;AAAA;;;;;;;;;;;;;;;;;AAhBL,aAAO,KAAK,IAAI,IAAI;AAAA;;;;;;;;;;;;;;;;;ACfxB,MAAM,YAAY;AAAgB,MAAM,OAAO,CAAE;AAAC,MAAM,OAAO;AAAuC,MAAM,gBAAgB,iBAAiB,YAAY,MAAM;AAE3J,MAAI,CAAwB,QAAQ,KAAK,WAAW,GAAG;AACnD,WAAO,WAAU;AAAA,EACpB;AACD,SAAO,QAAQ,IAAI,KAAK,IAAI,CAAC,QAAQ;AAEjC,UAAM,GAAG,OAAO;AAEhB,QAAI,OAAO;AACP;AAEJ,SAAK,OAAO;AACZ,UAAM,QAAQ,IAAI,SAAS,MAAM;AACjC,UAAM,cAAc,QAAQ,uBAAuB;AAEnD,QAAI,SAAS,cAAc,cAAc,QAAQ,aAAa,GAAG;AAC7D;AAAA,IACH;AAED,UAAM,OAAO,SAAS,cAAc,MAAM;AAE1C,SAAK,MAAM,QAAQ,eAAe;AAClC,QAAI,CAAC,OAAO;AACR,WAAK,KAAK;AACV,WAAK,cAAc;AAAA,IACtB;AACD,SAAK,OAAO;AAEZ,aAAS,KAAK,YAAY,IAAI;AAC9B,QAAI,OAAO;AACP,aAAO,IAAI,QAAQ,CAAC,KAAK,QAAQ;AAC7B,aAAK,iBAAiB,QAAQ,GAAG;AACjC,aAAK,iBAAiB,SAAS,MAAM,IAAI,IAAI,MAAM,6BAA6B,KAAK,CAAC,CAAC;AAAA,MACvG,CAAa;AAAA,IACJ;AAAA,EACJ,EAAC,EAAE,KAAK,MAAM,WAAY;AAC/B;ACrCO,MAAM,WAAW,CAAE;ACEnB,MAAM,aAAa;AAAA,EACzB,0BAAM,OAAO,wCAAsC;AAAA,EACnD,0BAAM,OAAO,+BAAuC;AAAA,EACpD,MAAM,2BAAO,qCAAoC;AAClD;AAEO,MAAM,aAAa;AAAA,EACzB,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AACjB;ACFA,cAAc,MAAM;AACV,OAAK;AACf;ACCA,2BAA2B,KAAK;AAC/B,SAAO,eAAe,SACpB,OAA2B,IAAK,QAA4B,IAAK,UAC1C,MACtB,IAAI,MAAM,KAAK,UAAU,GAAG,CAAC;AACjC;AAMA,mBAAmB,QAAQ;AAG1B,MAAI,OAAO,aAAa;AACvB,UAAM,IAAI,MACT,yHACH;AAAA,EACE;AAGD,MAAI,YAAY,QAAQ;AACvB,UAAM,IAAI,MAAM,kDAAkD;AAAA,EAClE;AAED,QAAM,mBACL,OAAO,UAAU,OAAO,UAAU,OAAO,OAAO,UAAU,OAAO,CAAC,OAAO;AAC1E,MAAI,OAAO,SAAS,kBAAkB;AACrC,UAAM,SAAS,OAAO;AAEtB,QAAI,CAAC,OAAO,SAAS,kBAAkB;AACtC,aAAO,EAAE,QAAQ,UAAU,KAAK,OAAO,IAAI,MAAK;IAChD;AAED,UAAM,QAAQ,OAAO,OAAO,UAAU,WAAW,IAAI,MAAM,OAAO,KAAK,IAAI,OAAO;AAElF,QAAI,CAAE,kBAAiB,QAAQ;AAC9B,aAAO;AAAA,QACN,QAAQ;AAAA,QACR,OAAO,IAAI,MACV,+FAA+F,OAAO,QACtG;AAAA,MACL;AAAA,IACG;AAED,QAAI,CAAC,UAAU,SAAS,OAAO,SAAS,KAAK;AAC5C,cAAQ,KAAK,mFAA8E;AAC3F,aAAO,EAAE,QAAQ,KAAK;IACtB;AAED,WAAO,EAAE,QAAQ;EACjB;AAED,MAAI,OAAO,UAAU;AACpB,QAAI,CAAC,OAAO,UAAU,KAAK,MAAM,OAAO,SAAS,GAAG,MAAM,GAAG;AAC5D,YAAM,IAAI,MACT,mFACJ;AAAA,IACG;AAED,QAAI,OAAO,OAAO,aAAa,UAAU;AACxC,YAAM,IAAI,MAAM,2DAA2D;AAAA,IAC3E;AAAA,EACD;AAED,MAAI,OAAO,cAAc;AACxB,QACC,CAAC,MAAM,QAAQ,OAAO,YAAY,KAClC,OAAO,aAAa,KAAK,CAAC,QAAQ,OAAO,QAAQ,QAAQ,GACxD;AACD,YAAM,IAAI,MAAM,uEAAuE;AAAA,IACvF;AAAA,EACD;AAGD,MAAwB,OAAQ,SAAS;AACxC,UAAM,IAAI,MACT,0HAEH;AAAA,EACE;AAED,SAA4D;AAC7D;AAMA,wBAAwB,MAAM,gBAAgB;AAC7C,MAAI,SAAS,OAAO,mBAAmB;AAAU,WAAO;AAExD,MAAI,mBAAmB,SAAS;AAC/B,WAAO,KAAK,SAAS,GAAG,IAAI,KAAK,MAAM,GAAG,EAAE,IAAI;AAAA,EAClD,WAAY,mBAAmB,YAAY,CAAC,KAAK,SAAS,GAAG,GAAG;AAC9D,WAAO,OAAO;AAAA,EACd;AAED,SAAO;AACR;AAGA,sBAAsB,KAAK;AAC1B,MAAI,UAAU,IAAI;AAElB,MAAI,CAAC,SAAS;AACb,UAAM,WAAW,IAAI,qBAAqB,MAAM;AAChD,cAAU,SAAS,SAAS,SAAS,GAAG,OAAO,IAAI;AAAA,EACnD;AAED,SAAO;AACR;AAEA,wBAAwB;AACvB,SAAO;AAAA,IACN,GAAG;AAAA,IACH,GAAG;AAAA,EACL;AACA;AAGA,qBAAqB,OAAO;AAC3B,QAAM,OAAO,MACX,aAAc,EACd,KAAK,CAAC,MAAM,aAAa,QAAQ,EAAE,SAAS,kBAAkB,GAAG;AACnE,SAAmE;AACpE;AAGA,kBAAkB,MAAM;AACvB,SAAO,gBAAgB,cACpB,IAAI,IAAI,KAAK,KAAK,SAAS,SAAS,OAAO,IAC3C,IAAI,IAAI,KAAK,IAAI;AACrB;AAGA,0BAA0B,OAAO;AAChC,QAAM,QAAQ,SAAS,KAAK;AAC5B,MAAI,QAAQ;AAEZ,oBAAkB;AACjB,YAAQ;AACR,UAAM,OAAO,CAAC,QAAQ,GAAG;AAAA,EACzB;AAGD,eAAa,WAAW;AACvB,YAAQ;AACR,UAAM,IAAI,SAAS;AAAA,EACnB;AAGD,qBAAmB,KAAK;AAEvB,QAAI;AACJ,WAAO,MAAM,UAAU,CAAC,cAAc;AACrC,UAAI,cAAc,UAAc,SAAS,cAAc,WAAY;AAClE,YAAK,YAAY;MACjB;AAAA,IACJ,CAAG;AAAA,EACD;AAED,SAAO,EAAE,QAAQ,KAAK;AACvB;AAEA,gCAAgC;AAC/B,QAAM,EAAE,KAAK,cAAc,SAAS,KAAK;AAKzC,QAAM,UAAU;AAGhB,MAAI;AAEJ,yBAAuB;AAGtB,iBAAa,OAAO;AAIpB,UAAM,OAAO;AAEb,UAAM,MAAM,MAAM,MAAM,GAAG,UAAU,QAAQ;AAAA,MAC5C,SAAS;AAAA,QACR,QAAQ;AAAA,QACR,iBAAiB;AAAA,MACjB;AAAA,IACJ,CAAG;AAED,QAAI,IAAI,IAAI;AACX,YAAM,EAAE,YAAY,MAAM,IAAI,KAAI;AAClC,YAAM,UAAU,YAAY;AAE5B,UAAI,SAAS;AACZ,YAAI,IAAI;AACR,qBAAa,OAAO;AAAA,MACpB;AAED,aAAO;AAAA,IACV,OAAS;AACN,YAAM,IAAI,MAAM,yBAAyB,IAAI,QAAQ;AAAA,IACrD;AAAA,EACD;AAID,SAAO;AAAA,IACN;AAAA,IACA;AAAA,EACF;AACA;AAMA,cAAc,OAAO;AACpB,MAAI,QAAO;AACX,MAAI,IAAI,MAAM;AAEd,MAAI,OAAO,UAAU,UAAU;AAC9B,WAAO;AAAG,cAAQ,QAAO,KAAM,MAAM,WAAW,EAAE,CAAC;AAAA,EACrD,OAAQ;AACN,WAAO;AAAG,cAAQ,QAAO,KAAM,MAAM,EAAE;AAAA,EACvC;AAED,SAAQ,WAAS,GAAG,SAAS,EAAE;AAChC;AAIA,MAAM,eAAe,OAAO;AAuC5B,uBAAuB,UAAU,MAAM;AACtC,QAAM,MAAM,KAAK,UAAU,OAAO,aAAa,WAAW,WAAW,SAAS,GAAG;AAEjF,MAAI,WAAW,6DAA6D;AAE5E,MAAI,QAAQ,OAAO,KAAK,SAAS,UAAU;AAC1C,gBAAY,2BAA2B,KAAK,KAAK,IAAI;AAAA,EACrD;AAED,QAAM,SAAS,SAAS,cAAc,QAAQ;AAC9C,MAAI,UAAU,OAAO,aAAa;AACjC,UAA0B,UAAK,MAAM,OAAO,WAAW,GAA/C,WAAkB,IAAT,kBAAS,IAAT,CAAT;AACR,WAAO,QAAQ,QAAQ,IAAI,SAAS,MAAM,KAAI,CAAC;AAAA,EAC/C;AAED,SAAO,aAAa,UAAU,IAAI;AACnC;AAEA,MAAM,gBAAgB;AAGtB,wBAAwB,IAAI;AAE3B,QAAM,QAAQ;AAGd,QAAM,QAAQ;AAId,MAAI,qBAAqB;AAEzB,QAAM,UACL,OAAO,KACJ,SACA,IAAI,OACJ,IAAI,mBAAmB,EAAE,EACvB,MAAM,8BAA8B,EACpC,IAAI,CAAC,SAAS,GAAG,aAAa;AAE9B,UAAM,QAAQ,+BAA+B,KAAK,OAAO;AACzD,QAAI,OAAO;AACV,YAAM,KAAK,MAAM,EAAE;AACnB,YAAM,KAAK,MAAM,EAAE;AACnB,aAAO;AAAA,IACP;AAED,UAAM,UAAU,MAAM,SAAS,SAAS;AAExC,WACC,WACA,MACC,QACE,MAAM,WAAW,EACjB,IAAI,CAAC,SAAS,OAAM;AACpB,UAAI,KAAI,GAAG;AACV,cAAM,CAAG,QAAM,MAAM,QACpB,cAAc,KAAK,OAAO;AAE3B,cAAM,KAAK,IAAI;AACf,cAAM,KAAK,IAAI;AACf,eAAO,OAAO,UAAU;AAAA,MACxB;AAED,UAAI,WAAW,QAAQ,SAAS,GAAG;AAAG,6BAAqB;AAE3D,aACC,QACE,UAAW,EAIX,QAAQ,WAAW,GAAG,EACtB,QAAQ,WAAW,GAAG,EAKtB,QAAQ,MAAM,KAAK,EACnB,QAAQ,OAAO,KAAK,EAEpB,QAAQ,uBAAuB,MAAM;AAAA,IAEnD,CAAW,EACA,KAAK,EAAE;AAAA,EAElB,CAAO,EACA,KAAK,EAAE,IAAI,qBAAqB,OAAO,KAC9C;AAEC,SAAO,EAAE,SAAS,OAAO;AAC1B;AAQA,cAAc,OAAO,OAAO,OAAO,WAAU;AAE5C,QAAM,SAAS;AAEf,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,GAAG;AACzC,UAAM,OAAO,MAAM;AACnB,UAAM,OAAO,MAAM;AACnB,UAAM,QAAQ,MAAM,IAAI,MAAM;AAE9B,QAAI,MAAM;AACT,YAAM,UAAU,UAAS;AACzB,UAAI,CAAC;AAAS,cAAM,IAAI,MAAM,YAAY,qBAAqB;AAE/D,UAAI,CAAC,QAAQ,KAAK;AAAG;AAAA,IACrB;AAED,WAAO,QAAQ;AAAA,EACf;AAED,SAAO;AACR;AAQA,eAAe,aAAY,aAAY,WAAU;AAChD,QAAM,UAAS,OAAO,QAAQ,WAAU,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,iBAAiB;AAC3E,UAAM,EAAE,SAAS,OAAO,UAAU,eAAe,EAAE;AAEnD,WAAO;AAAA,MACN;AAAA,MAEA,MAAM,CAAC,SAAS;AACf,cAAM,QAAQ,QAAQ,KAAK,IAAI;AAC/B,YAAI;AAAO,iBAAO,KAAK,OAAO,OAAO,OAAO,SAAQ;AAAA,MACpD;AAAA,MACD,GAAG,EAAE,IAAI,CAAC,MAAM,YAAW,EAAE;AAAA,MAC7B,GAAG,EAAE,IAAI,CAAC,MAAM,YAAW,EAAE;AAAA,MAC7B,YAAY,CAAC,CAAC;AAAA,IACjB;AAAA,EACA,CAAE;AAED,SAAO;AACR;AAEA,MAAM,aAAa;AACnB,MAAM,YAAY;AAElB,MAAM,SAAS,MAAM,YAAY,YAAY,QAAQ;AAIrD,MAAM,iBAAiB,WAAW;AAClC,MAAM,gBAAgB,WAAW;AAEjC,MAAM,aAAa;AASnB,IAAI,mBAAmB;AACvB,IAAI;AACH,qBAAmB,KAAK,MAAM,eAAe,WAAW;AACzD,QAAE;AAEF;AAGA,iCAAiC,OAAO;AACvC,mBAAiB,SAAS;AAC3B;AAWA,uBAAuB,EAAE,QAAQ,SAAS,aAAM,kBAAkB;;AAEjE,QAAM,QAAQ,oBAAI;AAGlB,QAAM,cAAc;AAEpB,QAAM,SAAS;AAAA,IACd,KAAK,iBAAiB,EAAE;AAAA,IACxB,MAAM,iBAAiB,EAAE;AAAA,IACzB,YAAY,SAA2D,IAAM;AAAA,IAC7E,SAAS,SAAS,OAAO;AAAA,IACzB,SAAS,qBAAsB;AAAA,EACjC;AAGC,QAAM,aAAa;AAAA,IAClB,IAAI;AAAA,IACJ,SAAS;AAAA,EACX;AAEC,QAAM,YAAY;AAAA,IAEjB,iBAAiB,CAAE;AAAA,IAGnB,gBAAgB,CAAE;AAAA,EACpB;AAGC,MAAI,UAAU;AAAA,IACb,QAAQ,CAAE;AAAA,IACV,OAAO;AAAA,IACP,YAAY;AAAA,IACZ,OAAO;AAAA,IAEP,KAAK;AAAA,EACP;AAEC,MAAI,UAAU;AACd,MAAI,aAAa;AACjB,MAAI,WAAW;AACf,MAAI,aAAa;AAGjB,MAAI,eAAe;AAGnB,MAAI;AAGJ,MAAI;AAEJ,MAAI,QAAQ;AACZ,SAAO,QAAQ,UAAU,OAAO,UAAU;AACzC,eAAW;AAEX,QAAI,CAAC;AAAO;AACZ,kBAAc;AAEd,WAAO,IAAI,IAAI,SAAS,IAAI,GAAG,IAAI,IAAI;AAAA,EACzC,CAAE;AACD,UAAQ;AAER,MAAI,iBAAiB;AAGrB,MAAI,wBAAwB,cAAQ,UAAR,mBAAgB;AAE5C,MAAI,CAAC,uBAAuB;AAG3B,4BAAwB,KAAK;AAG7B,YAAQ,aACP,iCAAK,QAAQ,QAAb,EAAoB,CAAC,YAAY,sBAAuB,IACxD,IACA,SAAS,IACZ;AAAA,EACE;AAID,QAAM,SAAS,iBAAiB;AAChC,MAAI,QAAQ;AACX,YAAQ,oBAAoB;AAC5B,aAAS,OAAO,GAAG,OAAO,CAAC;AAAA,EAC3B;AAED,MAAI,kBAAkB;AAGtB,MAAI;AAGJ,MAAI;AAOJ,sBACC,MACA,EAAE,WAAW,OAAO,eAAe,OAAO,YAAY,OAAO,QAAQ,MACrE,gBACC;AACD,UAAM,MAAM,IAAI,IAAI,MAAM,aAAa,QAAQ,CAAC;AAEhD,QAAI,gBAAgB;AACnB,aAAO,SAAS;AAAA,QACf;AAAA,QACA,QAAQ,WAAW,aAAY,IAAK;AAAA,QACpC;AAAA,QACA;AAAA,QACA,SAAS;AAAA,UACR;AAAA,UACA;AAAA,QACA;AAAA,QACD,UAAU,MAAM;AAAA,QAAE;AAAA,QAClB,SAAS,MAAM;AAAA,QAAE;AAAA,MACrB,CAAI;AAAA,IACD;AAED,UAAM,kBAAkB,GAAG;AAAA,EAC3B;AAGD,0BAAwB,KAAK;AAC5B,UAAM,SAAS,sBAAsB,GAAG;AAExC,QAAI,CAAC,QAAQ;AACZ,YAAM,IAAI,MAAM,8DAA8D;AAAA,IAC9E;AAED,eAAW,UAAU,WAAW,QAAQ,KAAK;AAC7C,eAAW,KAAK,OAAO;AAEvB,WAAO,WAAW;AAAA,EAClB;AAUD,wBAAsB,KAAK,gBAAgB,UAAU,MAAM,UAAU;;AACpE,UAAM,SAAS,sBAAsB,GAAG;AAExC,UAAM,gBAAiB,QAAQ;AAC/B,QAAI,oBAAoB,UAAW,MAAM,WAAW,QAAQ,QAAQ;AAEpE,QACC,CAAC,qBACD,IAAI,WAAW,SAAS,UACxB,IAAI,aAAa,SAAS,UACzB;AAMD,0BAAoB,MAAM,qBAAqB;AAAA,QAC9C,QAAQ;AAAA,QACR,OAAO,IAAI,MAAM,cAAc,IAAI,UAAU;AAAA,QAC7C;AAAA,QACA,SAAS;AAAA,MACb,CAAI;AAAA,IACD;AAED,QAAI,CAAC,mBAAmB;AACvB,YAAM,kBAAkB,GAAG;AAC3B,aAAO;AAAA,IACP;AAGD,QAAI,UAAU;AAAe,aAAO;AAEpC,gBAAY,SAAS;AAErB,QAAI,kBAAkB,UAAU;AAC/B,UAAI,eAAe,SAAS,MAAM,eAAe,SAAS,IAAI,QAAQ,GAAG;AACxE,4BAAoB,MAAM,qBAAqB;AAAA,UAC9C,QAAQ;AAAA,UACR,OAAO,IAAI,MAAM,eAAe;AAAA,UAChC;AAAA,UACA,SAAS;AAAA,QACd,CAAK;AAAA,MACL,OAAU;AACN,YAAI,gBAAgB;AACnB,eAAK,IAAI,IAAI,kBAAkB,UAAU,GAAG,EAAE,MAAM,IAAI;AAAA,YACvD,GAAG;AAAA,YACH,IAAI;AAAA,UACV,CAAM;AAAA,QACN,OAAW;AACN,gBAAM,kBAAkB,IAAI,IAAI,kBAAkB,UAAU,SAAS,IAAI,CAAC;AAAA,QAC1E;AAED,eAAO;AAAA,MACP;AAAA,IACD,WAAU,gCAAkB,UAAlB,oBAAyB,SAAzB,mBAA+B,WAAU,KAAK;AACxD,YAAM,UAAU,MAAM,OAAO,QAAQ,MAAK;AAC1C,UAAI,SAAS;AACZ,cAAM,kBAAkB,GAAG;AAAA,MAC3B;AAAA,IACD;AAED,eAAW;AAEX,QAAI,QAAQ,KAAK,SAAS;AACzB,YAAM,EAAE,YAAY;AACpB,YAAM,SAAS,QAAQ,eAAe,IAAI;AAC1C,cAAQ,MAAM,aAAa,yBAAyB;AACpD,cAAQ,QAAQ,eAAe,iBAAiB,aAAa,QAAQ,OAAO,IAAI,GAAG;AAAA,IACnF;AAED,QAAI,SAAS;AACZ,gBAAU,kBAAkB;AAE5B,UAAI,kBAAkB,MAAM,MAAM;AACjC,0BAAkB,MAAM,KAAK,MAAM;AAAA,MACnC;AAED,WAAK,KAAK,kBAAkB,KAAK;AAAA,IACpC,OAAS;AACN,iBAAW,iBAAiB;AAAA,IAC5B;AAGD,QAAI,MAAM;AACT,YAAM,EAAE,iBAAQ,cAAc;AAE9B,UAAI,CAAC,WAAW;AAMf,cAAM,QAAO,SAAS;AACtB,cAAM,WAAW,MAAK,aAAa,UAAU;AAE7C,2BAAY,MAAZ,mBAAgB;AAChB,cAAK,WAAW;AAChB,cAAK,MAAM,EAAE,eAAe,KAAM;AAGlC,YAAI,aAAa,MAAM;AACtB,gBAAK,aAAa,YAAY,QAAQ;AAAA,QAC3C,OAAW;AACN,gBAAK,gBAAgB,UAAU;AAAA,QAC/B;AAAA,MACD;AAGD,YAAM,KAAI;AAEV,UAAI,YAAY;AACf,cAAM,cAAc,IAAI,QAAQ,SAAS,eAAe,IAAI,KAAK,MAAM,CAAC,CAAC;AACzE,YAAI,SAAQ;AACX,mBAAS,QAAO,GAAG,QAAO,CAAC;AAAA,QAC3B,WAAU,aAAa;AAIvB,sBAAY,eAAc;AAAA,QAC/B,OAAW;AACN,mBAAS,GAAG,CAAC;AAAA,QACb;AAAA,MACD;AAAA,IACJ,OAAS;AAEN,YAAM,KAAI;AAAA,IACV;AAED,eAAW,UAAU;AACrB,eAAW,KAAK;AAChB,iBAAa;AAEb,QAAI,kBAAkB,MAAM,MAAM;AACjC,aAAO,kBAAkB,MAAM;AAAA,IAC/B;AAED,UAAM,YAAY,kBAAkB,MAAM,OAAO,kBAAkB,MAAM,OAAO,SAAS;AACzF,qBAAiB,wCAAW,OAAO,YAAW;AAE9C,QAAI;AAAU;AAEd,eAAW;AAAA,EACX;AAGD,sBAAoB,QAAQ;AAC3B,cAAU,OAAO;AAEjB,UAAM,QAAQ,SAAS,cAAc,uBAAuB;AAC5D,QAAI;AAAO,YAAM;AAEjB,WAAO,OAAO,MAAM;AAEpB,WAAO,IAAI,KAAK;AAAA,MACf;AAAA,MACA,OAAO,iCAAK,OAAO,QAAZ,EAAmB,OAAQ;AAAA,MAClC,SAAS;AAAA,IACZ,CAAG;AAED,QAAI,gBAAgB;AACnB,YAAM,aAAa,EAAE,MAAM,MAAM,IAAI,IAAI,IAAI,SAAS,IAAI;AAC1D,gBAAU,eAAe,QAAQ,CAAC,OAAO,GAAG,UAAU,CAAC;AAAA,IACvD;AAED,cAAU;AAAA,EACV;AAcD,mDAAiD;AAAA,IAChD;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,KACE;;AACF,UAAM,WAA2D,OAAO,OAAO,OAAO;AACtF,UAAM,WAAW,SAAS,KAAK,CAAC,MAAC;;AAAK,sBAAE,WAAF,oBAAU;AAAA,KAAQ;AAGxD,UAAM,SAAS;AAAA,MACd,UAAU,4CAAU,WAAV,oBAAkB;AAAA,MAC5B,OAAO;AAAA,QACN;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACA;AAAA,MACD,OAAO;AAAA,QACN,YAAY,SAAS,IAAI,CAAC,SAAS,KAAK,OAAO,OAAO;AAAA,MACtD;AAAA,IACJ;AAEE,aAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK,GAAG;AAC5C,YAAM,SAAS,SAAS,GAAG;AAC3B,aAAO,MAAM,SAAS,OAAO,SAAS,MAAM,OAAO,QAAQ;AAAA,IAC3D;AAED,UAAM,eACL,CAAC,QAAQ,OACT,IAAI,SAAS,QAAQ,IAAI,QACzB,QAAQ,UAAU,SAClB,QAAQ,UAAU;AAEnB,QAAI,cAAc;AACjB,aAAO,MAAM,OAAO,EAAE,OAAO,QAAQ,SAAS,QAAQ,OAAO;AAO7D,YAAM,cAAc,CAAC,UAAU,gBAAgB;AAC9C,eAAO,eAAe,OAAO,MAAM,MAAM,UAAU;AAAA,UAClD,KAAK,MAAM;AACV,kBAAM,IAAI,MAAM,SAAS,2CAA2C,aAAa;AAAA,UACjF;AAAA,QACN,CAAK;AAAA,MACL;AAEG,kBAAY,UAAU,QAAQ;AAC9B,kBAAY,QAAQ,UAAU;AAC9B,kBAAY,SAAS,cAAc;AAAA,IACnC;AAED,UAAM,OAAO,SAAS,SAAS,SAAS;AACxC,UAAM,cAAa,mCAAM,WAAN,mBAAc;AAEjC,QAAI,aAAY;AACf,YAAM,MAAM,IAAI,WAAW,IAAI;AAC/B,UAAI,SAAQ;AAEZ,YAAM,QAAQ,MAAM;AACnB,YAAI,MAAM,IAAI,GAAG,MAAM,QAAQ;AAC9B,gBAAM,OAAO,GAAG;AAAA,QAChB;AAED;AACA,qBAAa,OAAO;AAAA,MACxB;AAEG,YAAM,UAAU,WAAW,OAAO,YAAW,SAAS,GAAI;AAE1D,YAAM,cAAc,OAAO,QAAQ,UAAU,MAAM;AAClD,YAAI;AAAO;MACf,CAAI;AAED,eAAQ;AAER,YAAM,IAAI,KAAK,MAAM;AAAA,IACrB;AAED,WAAO;AAAA,EACP;AAcD,2BAAyB,EAAE,QAAQ,OAAO,QAAQ,KAAK,QAAQ,OAAO,OAAO,WAAW;AAEvF,UAAM,OAAO;AAAA,MACZ;AAAA,MACA,MAAM;AAAA,QACL,QAAQ,oBAAI,IAAK;AAAA,QACjB,KAAK;AAAA,QACL,SAAS;AAAA,QACT,OAAO;AAAA,QACP,cAAc,oBAAI,IAAK;AAAA,MACvB;AAAA,MACD,QAAQ;AAAA,MACR;AAAA,IACH;AAGE,4BAAwB,KAAK;AAC5B,YAAM,EAAE,SAAS,IAAI,IAAI,KAAK,GAAG;AACjC,WAAK,KAAK,aAAa,IAAI,IAAI;AAAA,IAC/B;AAED,QAAI,OAAO;AAEV,WAAK,KAAK,aAAa,IAAI,IAAI,IAAI;AAAA,IACnC;AAGD,UAAM,cAAc;AACpB,eAAW,OAAO,QAAQ;AACzB,aAAO,eAAe,aAAa,KAAK;AAAA,QACvC,MAAM;AACL,eAAK,KAAK,OAAO,IAAI,GAAG;AACxB,iBAAO,OAAO;AAAA,QACd;AAAA,QACD,YAAY;AAAA,MAChB,CAAI;AAAA,IACD;AAED,UAAM,WAAU;AAEhB,QAAI,OAAO,MAAM;AAEhB,YAAM,aAAa;AAAA,QAClB;AAAA,QACA,QAAQ;AAAA,QACR,OAAO,SAAS,CAAE;AAAA,QAClB,IAAI,MAAM;AACT,eAAK,KAAK,MAAM;AAEhB,iBAAO,IAAI,MAAM,KAAK;AAAA,YACrB,KAAK,CAAC,SAAQ,aAAa;AAC1B,kBAAI,aAAa,QAAQ;AACxB,sBAAM,IAAI,MACT,0HACT;AAAA,cACQ;AAED,qBAAO,QAAQ,IAAI,SAAQ,UAAU,OAAM;AAAA,YAC3C;AAAA,UACP,CAAM;AAAA,QACD;AAAA,QACD,IAAI,UAAU;AACb,eAAK,KAAK,UAAU;AACpB,iBAAO;AAAA,QACP;AAAA,QACD,IAAI,QAAQ;AACX,eAAK,KAAK,QAAQ;AAClB,iBAAO,mBAAK;AAAA,QACZ;AAAA,QACD,MAAM,MAAM,UAAU,OAAM;AAC3B,cAAI;AAEJ,cAAI,OAAO,aAAa,UAAU;AACjC,wBAAY;AAAA,UAClB,OAAY;AACN,wBAAY,SAAS;AAIrB,oBAAO;AAAA,cAGN,MACC,SAAS,WAAW,SAAS,SAAS,WAAW,SAC9C,SACA,MAAM,SAAS,KAAM;AAAA,cACzB,OAAO,SAAS;AAAA,cAChB,aAAa,SAAS;AAAA,cACtB,SAAS,SAAS;AAAA,cAClB,WAAW,SAAS;AAAA,cACpB,WAAW,SAAS;AAAA,cACpB,QAAQ,SAAS;AAAA,cACjB,MAAM,SAAS;AAAA,cACf,UAAU,SAAS;AAAA,cACnB,UAAU,SAAS;AAAA,cACnB,gBAAgB,SAAS;AAAA,cACzB,QAAQ,SAAS;AAAA,eACd;AAAA,UAEJ;AAGD,gBAAM,aAAa,IAAI,IAAI,WAAW,GAAG,EAAE;AAC3C,yBAAe,UAAU;AAGzB,iBAAO,UAAU,aAAa,YAAY,KAAI,IAAI,cAAc,WAAW,KAAI;AAAA,QAC/E;AAAA,QACD,QAAQ,0BAAU;AAAA,QAClB,OAAO,wBAAS;AAAA,MACpB;AAWG,UAAI;AASG;AACN,iBAAS,MAAM,OAAO,KAAK,KAAK,MAAM,UAAU;AAAA,MAChD;AAED,UAAI,CAAC,QAAQ;AACZ,cAAM,IAAI,MAAM,mCAAmC;AAAA,MACnD;AAED,WAAK,SAAS,UAAU,MAAM;AAC9B,UAAI,KAAK,OAAO;AAAO,aAAK,QAAQ,KAAK,OAAO;AAChD,UAAI,KAAK,OAAO,cAAc;AAC7B,aAAK,OAAO,aAAa,QAAQ,cAAc;AAAA,MAC/C;AAAA,IACD,WAAU,OAAO;AACjB,WAAK,SAAS,UAAU,EAAE,MAAO;AAAA,IACjC;AAED,WAAO;AAAA,EACP;AAMD,4BAA0B,EAAE,IAAI,KAAK,QAAQ,SAAS,UAAU;;AAC/D,QAAI,WAAW,OAAO,MAAM,WAAW,SAAS;AAC/C,aAAO,WAAW;AAAA,IAClB;AAED,QAAI,CAAC,UAAU;AACd,YAAM,SAAS,MAAM,IAAI,EAAE;AAC3B,UAAI;AAAQ,eAAO;AAAA,IACnB;AAED,UAAM,EAAE,GAAG,GAAG,eAAe;AAE7B,UAAM,UAAU,QAAQ,OAAO;AAAA,MAC9B,KAAK,OAAO,QAAQ,IAAI,WAAW,QAAQ,IAAI;AAAA,MAC/C,QAAQ,OAAO,KAAK,MAAM,EAAE,OAAO,CAAC,QAAQ,QAAQ,OAAO,SAAS,OAAO,IAAI;AAAA,MAC/E,SAAS,eAAe,QAAQ;AAAA,IACnC;AAGE,QAAI,SAAS;AAGb,QAAI,QAAQ;AACZ,QAAI,gBAAgB;AAGpB,QAAI,SAAS;AAGb,QAAI,QAAQ;AAKZ,MAAE,QAAQ,CAAC,WAAW,OAAQ,EAAC,MAAM,MAAM;AAAA,IAAE,EAAC;AAE9C;AAAM,eAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,KAAK,GAAG;AAE3C,YAAI;AAEJ,YAAI;AACH,cAAI,CAAC,EAAE;AAAI;AAEX,gBAAM,SAAS,MAAM,EAAE,GAAE;AACzB,gBAAM,WAAW,QAAQ,OAAO;AAEhC,gBAAM,4BACL,CAAC,YACD,WAAW,SAAS,UACnB,QAAQ,OAAO,SAAS,KAAK,OAC9B,QAAQ,OAAO,KAAK,CAAC,UAAU,SAAS,KAAK,OAAO,IAAI,KAAK,CAAC,KAC7D,QAAQ,WAAW,SAAS,KAAK,WAClC,MAAM,KAAK,SAAS,KAAK,YAAY,EAAE,KAAK,CAAC,QAAQ,YAAY,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC,CAAC,KACrF,iBAAiB,SAAS,KAAK;AAEjC,cAAI,2BAA2B;AAE9B,gBAAI,QAAQ;AAEZ,kBAAM,iBAAiB,cAAc,MAAM,EAAE,SAAS;AAEtD,gBAAI,gBAAgB;AACnB,oBAAM,MAAM,MAAM,aACjB,GAAG,IAAI,WAAW,IAAI,SAAS,SAAS,GAAG,IAAI,KAAK,iBAAiB,IAAI,UACzE;AAAA,gBACC,SAAS;AAAA,kBACR,oBAAoB;AAAA,gBACpB;AAAA,cACD,CACR;AAEM,kBAAI,IAAI,IAAI;AACX,sBAAM,WAAW,IAAI,QAAQ,IAAI,sBAAsB;AAEvD,oBAAI,UAAU;AACb,yBAAO;AAAA,oBACN;AAAA,oBACA,OAAO,CAAE;AAAA,oBACT,OAAO;AAAA,kBAChB;AAAA,gBACQ;AAED,wBAAQ,IAAI,WAAW,MAAM,KAAK,MAAM,IAAI;cACnD,OAAa;AACN,yBAAS,IAAI;AACb,wBAAQ,IAAI,MAAM,qBAAqB;AAAA,cACvC;AAAA,YACD;AAED,gBAAI,CAAC,OAAO;AACX,qBAAO,MAAM,UAAU;AAAA,gBACtB;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,SAAS,MAAM;AAAA,cACtB,CAAO;AAAA,YACD;AAED,gBAAI,MAAM;AACT,kBAAI,gBAAgB;AACnB,qBAAK,KAAK,MAAM;AAAA,cAChB;AAED,kBAAI,KAAK,QAAQ;AAChB,oBAAI,KAAK,OAAO,OAAO;AACtB,2BAAS,KAAK,OAAO;AACrB,0BAAQ,KAAK,OAAO;AAAA,gBACpB;AAED,oBAAI,KAAK,OAAO,UAAU;AACzB,yBAAO;AAAA,oBACN,UAAU,KAAK,OAAO;AAAA,oBACtB,OAAO,CAAE;AAAA,oBACT,OAAO;AAAA,kBAChB;AAAA,gBACQ;AAED,oBAAI,KAAK,OAAO,OAAO;AACtB,kCAAgB;AAAA,gBAChB;AAAA,cACD;AAAA,YACD;AAAA,UACN,OAAW;AACN,mBAAO;AAAA,UACP;AAAA,QACD,SAAQ,GAAP;AACD,mBAAS;AACT,kBAAQ,kBAAkB,CAAC;AAAA,QAC3B;AAED,YAAI,OAAO;AACV,iBAAO,KAAK;AACX,gBAAI,EAAE,IAAI;AACT,kBAAI;AAGJ,kBAAI;AACJ,kBAAI,IAAI;AACR,qBAAO,CAAE,eAAc,OAAO,KAAK;AAClC,qBAAK;AAAA,cACL;AAED,kBAAI;AACH,+BAAe,MAAM,UAAU;AAAA,kBAC9B;AAAA,kBACA;AAAA,kBACA,QAAQ,MAAM,EAAE,GAAI;AAAA,kBACpB;AAAA,kBACA;AAAA,kBACA,OAAO,YAAY;AAAA,kBACnB,SAAS,MAAM;AAAA,gBACvB,CAAQ;AAED,oBAAI,oDAAc,WAAd,oBAAsB,OAAO;AAChC;AAAA,gBACA;AAED,oBAAI,mDAAc,WAAd,mBAAsB,OAAO;AAChC,0BAAQ,kCACJ,QACA,aAAa,OAAO;AAAA,gBAExB;AAED,yBAAS,OAAO,MAAM,GAAG,IAAI,CAAC,EAAE,OAAO,YAAY;AACnD;AAAA,cACA,SAAQ,GAAP;AACD;AAAA,cACA;AAAA,YACD;AAAA,UACD;AAED,iBAAO,MAAM,qBAAqB;AAAA,YACjC;AAAA,YACA;AAAA,YACA;AAAA,YACA,SAAS,MAAM;AAAA,UACpB,CAAK;AAAA,QACL,OAAU;AACN,cAAI,mCAAM,WAAN,mBAAc,OAAO;AACxB,oBAAQ,kCACJ,QACA,KAAK,OAAO;AAAA,UAEhB;AAED,iBAAO,KAAK,IAAI;AAAA,QAChB;AAAA,MACD;AAED,WAAO,MAAM,kCAAkC;AAAA,MAC9C;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,SAAS,MAAM;AAAA,IAClB,CAAG;AAAA,EACD;AAUD,sCAAoC,EAAE,QAAQ,OAAO,KAAK,WAAW;;AAEpE,UAAM,SAAS;AAEf,UAAM,cAAc,MAAM,UAAU;AAAA,MACnC,QAAQ,MAAM;AAAA,MACd;AAAA,MACA;AAAA,MACA,OAAO,CAAE;AAAA,MACT;AAAA,IACH,CAAG;AAED,UAAM,aAAa,MAAM,UAAU;AAAA,MAClC;AAAA,MACA;AAAA,MACA,QAAQ,MAAM;AAAA,MACd;AAAA,MACA;AAAA,MACA,OAAQ,eAAe,YAAY,UAAU,YAAY,OAAO,SAAU,CAAE;AAAA,MAC5E;AAAA,IACH,CAAG;AAED,WAAO,MAAM,kCAAkC;AAAA,MAC9C;AAAA,MACA;AAAA,MACA,OAAO,kCACH,kDAAa,WAAb,oBAAqB,QACrB,+CAAY,WAAZ,mBAAoB;AAAA,MAExB,QAAQ,CAAC,aAAa,UAAU;AAAA,MAChC;AAAA,MACA;AAAA,MACA;AAAA,IACH,CAAG;AAAA,EACD;AAGD,iCAA+B,KAAK;AACnC,QAAI,IAAI,WAAW,SAAS,UAAU,CAAC,IAAI,SAAS,WAAW,KAAI;AAAG;AAEtE,UAAM,OAAO,UAAU,IAAI,SAAS,MAAM,MAAK,MAAM,KAAK,GAAG;AAE7D,eAAW,SAAS,QAAQ;AAC3B,YAAM,SAAS,MAAM,KAAK,IAAI;AAE9B,UAAI,QAAQ;AAEX,cAAM,SAAS;AAAA,UACd,IAAI,IAAI,WAAW,IAAI;AAAA,UACvB;AAAA,UACA;AAAA,UACA;AAAA,QACL;AAEI,eAAO;AAAA,MACP;AAAA,IACD;AAAA,EACD;AAgBD,0BAAwB,EAAE,KAAK,iBAAQ,WAAW,gBAAgB,SAAS,UAAU,WAAW;AAC/F,UAAM,OAAO,QAAQ;AACrB,QAAI,eAAe;AAEnB,UAAM,aAAa;AAAA,MAClB;AAAA,MACA,IAAI;AAAA,MACJ,QAAQ,MAAO,eAAe;AAAA,IACjC;AAEE,cAAU,gBAAgB,QAAQ,CAAC,OAAO,GAAG,UAAU,CAAC;AAExD,QAAI,cAAc;AACjB;AACA;AAAA,IACA;AAED,UAAM,WAAW,eAAe,IAAI,UAAU,cAAc;AAC5D,UAAM,aAAa,IAAI,IAAI,IAAI,SAAS,WAAW,IAAI,SAAS,IAAI,IAAI;AAExE,4BAAwB,qBAAqB;AAE7C;AAEA,QAAI,SAAS;AACZ,aAAO,WAAW,IAAI;AAAA,QACrB,MAAM,QAAQ;AAAA,QACd,IAAI;AAAA,MACR,CAAI;AAAA,IACD;AAED,UAAM,OACL,YACA,gBACA,OACA;AAAA,MACC;AAAA,MACA;AAAA,MACA;AAAA,IACA,GACD,MAAM;AACL,YAAM,cAAa,EAAE,MAAM,IAAI,WAAU;AACzC,gBAAU,eAAe,QAAQ,CAAC,OAAO,GAAG,WAAU,CAAC;AAEvD,aAAO,WAAW,IAAI,IAAI;AAAA,IAC1B,CACJ;AAAA,EACE;AAQD,6BAA2B,KAAK;AAC/B,aAAS,OAAO,IAAI;AACpB,WAAO,IAAI,QAAQ,MAAM;AAAA,KAAE;AAAA,EAC3B;AAQD,SAAO;AAAA,IACN,gBAAgB,CAAC,OAAO;AACvB,cAAQ,MAAM;AACb,kBAAU,eAAe,KAAK,EAAE;AAEhC,eAAO,MAAM;AACZ,gBAAM,IAAI,UAAU,eAAe,QAAQ,EAAE;AAC7C,oBAAU,eAAe,OAAO,GAAG,CAAC;AAAA,QACzC;AAAA,MACA,CAAI;AAAA,IACD;AAAA,IAED,iBAAiB,CAAC,OAAO;AACxB,cAAQ,MAAM;AACb,kBAAU,gBAAgB,KAAK,EAAE;AAEjC,eAAO,MAAM;AACZ,gBAAM,IAAI,UAAU,gBAAgB,QAAQ,EAAE;AAC9C,oBAAU,gBAAgB,OAAO,GAAG,CAAC;AAAA,QAC1C;AAAA,MACA,CAAI;AAAA,IACD;AAAA,IAED,yBAAyB,MAAM;AAK9B,UAAI,YAAY,CAAC,SAAS;AACzB,qBAAa;AAAA,MACb;AAAA,IACD;AAAA,IAED,MAAM,CAAC,MAAM,OAAO,OAAO,KAAK,MAAM,MAAM,EAAE;AAAA,IAE9C,YAAY,CAAC,aAAa;AACzB,UAAI,OAAO,aAAa,YAAY;AACnC,oBAAY,KAAK,QAAQ;AAAA,MAC7B,OAAU;AACN,cAAM,EAAE,SAAS,IAAI,IAAI,UAAU,SAAS,IAAI;AAChD,oBAAY,KAAK,CAAC,QAAQ,QAAQ,IAAI;AAAA,MACtC;AAED,UAAI,CAAC,cAAc;AAClB,uBAAe,QAAQ,QAAS,EAAC,KAAK,YAAY;AACjD,gBAAM,OAAO,IAAI,IAAI,SAAS,IAAI,GAAG,IAAI,IAAI;AAE7C,yBAAe;AAAA,QACpB,CAAK;AAAA,MACD;AAED,aAAO;AAAA,IACP;AAAA,IAED,UAAU,OAAO,SAAS;AACzB,YAAM,MAAM,IAAI,IAAI,MAAM,aAAa,QAAQ,CAAC;AAChD,YAAM,SAAS,GAAG;AAAA,IAClB;AAAA,IAGD,iBAAiB,OAAO,cAAc;AACrC,YAAM,WAAW,YACd,OAAO,OAAO,CAAC,UAAU,UAAU,KAAK,CAAC,aAAa,MAAM,KAAK,QAAQ,CAAC,CAAC,IAC3E;AAEH,YAAM,WAAW,SAAS,IAAI,CAAC,MAAM,QAAQ,IAAI,EAAE,EAAE,IAAI,CAAC,SAAS,KAAM,EAAC,CAAC;AAE3E,YAAM,QAAQ,IAAI,QAAQ;AAAA,IAC1B;AAAA,IAED,eAAe,MAAM;AACpB,cAAQ,oBAAoB;AAM5B,uBAAiB,gBAAgB,CAAC,MAAM;AACvC,YAAI,eAAe;AAEnB,cAAM,aAAa;AAAA,UAClB,MAAM,QAAQ;AAAA,UACd,IAAI;AAAA,UACJ,QAAQ,MAAO,eAAe;AAAA,QACnC;AAEI,kBAAU,gBAAgB,QAAQ,CAAC,OAAO,GAAG,UAAU,CAAC;AAExD,YAAI,cAAc;AACjB,YAAE,eAAc;AAChB,YAAE,cAAc;AAAA,QACrB,OAAW;AACN,kBAAQ,oBAAoB;AAAA,QAC5B;AAAA,MACL,CAAI;AAED,uBAAiB,oBAAoB,MAAM;AAC1C,YAAI,SAAS,oBAAoB,UAAU;AAC1C,kCAAwB,qBAAqB;AAE7C,cAAI;AACH,2BAAe,cAAc,KAAK,UAAU,gBAAgB;AAAA,UAClE,QAAO;AAAA,UAED;AAAA,QACD;AAAA,MACL,CAAI;AAGD,YAAM,mBAAmB,CAAC,UAAU;AACnC,cAAM,IAAI,YAAY,KAAK;AAC3B,YAAI,KAAK,EAAE,QAAQ,EAAE,aAAa,oBAAoB,GAAG;AACxD,mBAAS,SAAS,CAAC,CAAC;AAAA,QACpB;AAAA,MACL;AAGG,UAAI;AAGJ,YAAM,mBAAmB,CAAC,UAAU;AACnC,qBAAa,iBAAiB;AAC9B,4BAAoB,WAAW,MAAM;;AAGpC,uBAAM,WAAN,oBAAc,cACb,IAAI,YAAY,8BAA8B,EAAE,SAAS,KAAI,CAAE;AAAA,QAEhE,GAAE,EAAE;AAAA,MACT;AAEG,uBAAiB,cAAc,gBAAgB;AAC/C,uBAAiB,aAAa,gBAAgB;AAC9C,uBAAiB,8BAA8B,gBAAgB;AAG/D,uBAAiB,SAAS,CAAC,UAAU;AACpC,YAAI,CAAC;AAAgB;AAIrB,YAAI,MAAM,UAAU,MAAM,UAAU;AAAG;AACvC,YAAI,MAAM,WAAW,MAAM,WAAW,MAAM,YAAY,MAAM;AAAQ;AACtE,YAAI,MAAM;AAAkB;AAE5B,cAAM,IAAI,YAAY,KAAK;AAC3B,YAAI,CAAC;AAAG;AAER,YAAI,CAAC,EAAE;AAAM;AAEb,cAAM,mBAAmB,aAAa;AACtC,cAAM,MAAM,SAAS,CAAC;AAKtB,YAAI,CAAC,oBAAoB,IAAI,WAAW;AAAQ;AAKhD,cAAM,MAAO,GAAE,aAAa,KAAK,KAAK,IAAI,MAAM,KAAK;AAErD,YACC,EAAE,aAAa,UAAU,KACzB,IAAI,SAAS,UAAU,KACvB,EAAE,aAAa,kBAAkB,GAChC;AACD;AAAA,QACA;AAGD,YAAI,mBAAmB,EAAE,OAAO,UAAU,EAAE;AAAQ;AAKpD,cAAM,CAAC,OAAM,SAAQ,IAAI,KAAK,MAAM,GAAG;AACvC,YAAI,UAAS,UAAa,UAAS,SAAS,KAAK,MAAM,GAAG,EAAE,IAAI;AAG/D,4BAAkB;AAElB,kCAAwB,qBAAqB;AAE7C,iBAAO,KAAK,IAAI,iCAAK,OAAL,EAAW,IAAG,EAAE;AAChC,iBAAO,KAAK;AAEZ;AAAA,QACA;AAED,iBAAS;AAAA,UACR;AAAA,UACA,QAAQ,EAAE,aAAa,oBAAoB,IAAI,aAAc,IAAG;AAAA,UAChE,WAAW;AAAA,UACX,gBAAgB,CAAE;AAAA,UAClB,SAAS;AAAA,YACR,OAAO,CAAE;AAAA,YACT,cAAc,IAAI,SAAS,SAAS;AAAA,UACpC;AAAA,UACD,UAAU,MAAM,MAAM,eAAgB;AAAA,UACtC,SAAS,MAAM,MAAM,eAAgB;AAAA,QAC1C,CAAK;AAAA,MACL,CAAI;AAED,uBAAiB,YAAY,CAAC,UAAU;AACvC,YAAI,MAAM,SAAS,gBAAgB;AAGlC,cAAI,MAAM,MAAM,eAAe;AAAuB;AAEtD,mBAAS;AAAA,YACR,KAAK,IAAI,IAAI,SAAS,IAAI;AAAA,YAC1B,QAAQ,iBAAiB,MAAM,MAAM;AAAA,YACrC,WAAW;AAAA,YACX,gBAAgB,CAAE;AAAA,YAClB,SAAS;AAAA,YACT,UAAU,MAAM;AACf,sCAAwB,MAAM,MAAM;AAAA,YACpC;AAAA,YACD,SAAS,MAAM;AACd,oBAAM,QAAQ,wBAAwB,MAAM,MAAM;AAClD,sBAAQ,GAAG,KAAK;AAAA,YAChB;AAAA,UACP,CAAM;AAAA,QACD;AAAA,MACL,CAAI;AAED,uBAAiB,cAAc,MAAM;AAGpC,YAAI,iBAAiB;AACpB,4BAAkB;AAClB,kBAAQ,aACP,iCAAK,QAAQ,QAAb,EAAoB,CAAC,YAAY,EAAE,sBAAuB,IAC1D,IACA,SAAS,IACf;AAAA,QACK;AAAA,MACL,CAAI;AAAA,IACD;AAAA,IAED,UAAU,OAAO,EAAE,QAAQ,OAAO,OAAO,QAAQ,cAAc;AAC9D,YAAM,MAAM,IAAI,IAAI,SAAS,IAAI;AAGjC,YAAM,SAAS;AAGf,UAAI,QAAQ;AAGZ,UAAI;AAEJ,UAAI;AAEJ,UAAI;AACH,iBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,GAAG;AACzC,gBAAM,UAAU,MAAM,MAAM,SAAS;AAErC,cAAI;AAEJ,cAAI,SAAS;AACZ,kBAAM,aAAa,SAAS,cAAc,uCAAuC;AACjF,gBAAI,YAAY;AACf,sBAAQ,KAAK,MAA6B,WAAW,WAAW;AAAA,YAChE;AAAA,UACD;AAED,gBAAM,OAAO,MAAM,UAAU;AAAA,YAC5B,QAAQ,MAAM,WAAW,MAAM,IAAK;AAAA,YACpC;AAAA,YACA;AAAA,YACA;AAAA,YACA,QAAQ,UAAU,SAAS;AAAA,YAC3B,OAAO,UAAU,QAAQ;AAAA,YACzB;AAAA,YACA;AAAA,UACN,CAAM;AAED,cAAI,OAAO;AACV,iBAAK,KAAK,aAAa,IAAI,IAAI,IAAI;AACnC,iBAAK,KAAK,MAAM;AAAA,UAChB;AAED,iBAAO,KAAK,IAAI;AAEhB,cAAI,QAAQ,KAAK,QAAQ;AACxB,gBAAI,KAAK,OAAO,OAAO;AACtB,kBAAI;AAAO,sBAAM,KAAK,OAAO;AAC7B,2BAAa;AAAA,gBACZ,QAAQ,KAAK,OAAO;AAAA,gBACpB,OAAO,KAAK,OAAO;AAAA,gBACnB;AAAA,gBACA;AAAA,cACR;AAAA,YACA,WAAiB,KAAK,OAAO,OAAO;AAC7B,sBAAQ,kCACJ,QACA,KAAK,OAAO;AAAA,YAEhB;AAAA,UACD;AAAA,QACD;AAED,iBAAS,aACN,MAAM,qBAAqB,UAAU,IACrC,MAAM,kCAAkC;AAAA,UACxC;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACP,CAAQ;AAAA,MACJ,SAAQ,GAAP;AACD,YAAI;AAAO,gBAAM;AAEjB,iBAAS,MAAM,qBAAqB;AAAA,UACnC,QAAQ;AAAA,UACR,OAAO,kBAAkB,CAAC;AAAA,UAC1B;AAAA,UACA;AAAA,QACL,CAAK;AAAA,MACD;AAED,UAAI,OAAO,UAAU;AAGpB,cAAM,kBAAkB,IAAI,IAAI,OAAO,UAAU,SAAS,IAAI,CAAC;AAAA,MAC/D;AAED,iBAAW,MAAM;AAAA,IACjB;AAAA,EACH;AACA;AAsBA,qBAAqB,EAAE,OAAO,QAAQ,SAAS,OAAO,KAAK,gBAAgB,WAAW;AACrF,QAAM,SAAS,cAAc;AAAA,IAC5B;AAAA,IACA;AAAA,IACA,MAAM,MAAM;AAAA,IACZ;AAAA,EACF,CAAE;AAED,OAAK,EAAE,OAAM,CAAE;AACf,YAAU,KAAK;AAEf,MAAI,SAAS;AACZ,UAAM,OAAO,SAAS,OAAO;AAAA,EAC7B;AAED,MAAI,OAAO;AACV,QAAI;AAAK,aAAO,KAAK,SAAS,MAAM,EAAE,cAAc,KAAI,CAAE;AAC1D,WAAO,cAAa;AAAA,EACpB;AAED,gBAAc,IAAI,YAAY,iBAAiB,CAAC;AACjD","names":["base"],"sources":["../../../../runtime/paths.js","../../../../generated/root.svelte","../../../../../vite/preload-helper","../../../../generated/client-matchers.js","../../../../generated/client-manifest.js","../../../../runtime/client/singletons.js","../../../../runtime/client/start.js"],"sourcesContent":["/** @type {string} */\nlet base = '';\n\n/** @type {string} */\nlet assets = '';\n\n/** @param {{ base: string, assets: string }} paths */\nfunction set_paths(paths) {\n\tbase = paths.base;\n\tassets = paths.assets || base;\n}\n\nexport { assets, base, set_paths };\n","<!-- This file is generated by @sveltejs/kit — do not edit it! -->\n<script>\n\timport { setContext, afterUpdate, onMount } from 'svelte';\n\n\t// stores\n\texport let stores;\n\texport let page;\n\n\texport let components;\n\texport let props_0 = null;\n\texport let props_1 = null;\n\texport let props_2 = null;\n\n\tsetContext('__svelte__', stores);\n\n\t$: stores.page.set(page);\n\tafterUpdate(stores.page.notify);\n\n\tlet mounted = false;\n\tlet navigated = false;\n\tlet title = null;\n\n\tonMount(() => {\n\t\tconst unsubscribe = stores.page.subscribe(() => {\n\t\t\tif (mounted) {\n\t\t\t\tnavigated = true;\n\t\t\t\ttitle = document.title || 'untitled page';\n\t\t\t}\n\t\t});\n\n\t\tmounted = true;\n\t\treturn unsubscribe;\n\t});\n</script>\n\n{#if components[1]}\n\t<svelte:component this={components[0]} {...(props_0 || {})}>\n\t\t{#if components[2]}\n\t\t\t<svelte:component this={components[1]} {...(props_1 || {})}>\n\t\t\t\t<svelte:component this={components[2]} {...(props_2 || {})}/>\n\t\t\t</svelte:component>\n\t\t{:else}\n\t\t\t<svelte:component this={components[1]} {...(props_1 || {})} />\n\t\t{/if}\n\t</svelte:component>\n{:else}\n\t<svelte:component this={components[0]} {...(props_0 || {})} />\n{/if}\n\n{#if mounted}\n\t<div id=\"svelte-announcer\" aria-live=\"assertive\" aria-atomic=\"true\" style=\"position: absolute; left: 0; top: 0; clip: rect(0 0 0 0); clip-path: inset(50%); overflow: hidden; white-space: nowrap; width: 1px; height: 1px\">\n\t\t{#if navigated}\n\t\t\t{title}\n\t\t{/if}\n\t</div>\n{/if}","const scriptRel = 'modulepreload';const seen = {};const base = '/panzoom-node/_app/immutable/';export const __vitePreload = function preload(baseModule, deps) {\n    // @ts-ignore\n    if (!__VITE_IS_MODERN__ || !deps || deps.length === 0) {\n        return baseModule();\n    }\n    return Promise.all(deps.map((dep) => {\n        // @ts-ignore\n        dep = `${base}${dep}`;\n        // @ts-ignore\n        if (dep in seen)\n            return;\n        // @ts-ignore\n        seen[dep] = true;\n        const isCss = dep.endsWith('.css');\n        const cssSelector = isCss ? '[rel=\"stylesheet\"]' : '';\n        // @ts-ignore check if the file is already preloaded by SSR markup\n        if (document.querySelector(`link[href=\"${dep}\"]${cssSelector}`)) {\n            return;\n        }\n        // @ts-ignore\n        const link = document.createElement('link');\n        // @ts-ignore\n        link.rel = isCss ? 'stylesheet' : scriptRel;\n        if (!isCss) {\n            link.as = 'script';\n            link.crossOrigin = '';\n        }\n        link.href = dep;\n        // @ts-ignore\n        document.head.appendChild(link);\n        if (isCss) {\n            return new Promise((res, rej) => {\n                link.addEventListener('load', res);\n                link.addEventListener('error', () => rej(new Error(`Unable to preload CSS for ${dep}`)));\n            });\n        }\n    })).then(() => baseModule());\n}","export const matchers = {};","export { matchers } from './client-matchers.js';\n\nexport const components = [\n\t() => import(\"..\\\\..\\\\src\\\\routes\\\\__layout.svelte\"),\n\t() => import(\"..\\\\runtime\\\\components\\\\error.svelte\"),\n\t() => import(\"..\\\\..\\\\src\\\\routes\\\\index.svelte\")\n];\n\nexport const dictionary = {\n\t\"\": [[0, 2], [1]]\n};","/** @type {import('./types').Client} */\nlet client;\n\n/**\n * @param {{\n *   client: import('./types').Client;\n * }} opts\n */\nfunction init(opts) {\n\tclient = opts.client;\n}\n\nexport { client, init };\n","import { onMount, tick } from 'svelte';\nimport { writable } from 'svelte/store';\nimport { assets, set_paths } from '../paths.js';\nimport Root from '__GENERATED__/root.svelte';\nimport { components, dictionary, matchers } from '__GENERATED__/client-manifest.js';\nimport { init } from './singletons.js';\n\n/**\n * @param {unknown} err\n * @return {Error}\n */\nfunction coalesce_to_error(err) {\n\treturn err instanceof Error ||\n\t\t(err && /** @type {any} */ (err).name && /** @type {any} */ (err).message)\n\t\t? /** @type {Error} */ (err)\n\t\t: new Error(JSON.stringify(err));\n}\n\n/**\n * @param {import('types').LoadOutput} loaded\n * @returns {import('types').NormalizedLoadOutput}\n */\nfunction normalize(loaded) {\n\t// TODO remove for 1.0\n\t// @ts-expect-error\n\tif (loaded.fallthrough) {\n\t\tthrow new Error(\n\t\t\t'fallthrough is no longer supported. Use matchers instead: https://kit.svelte.dev/docs/routing#advanced-routing-matching'\n\t\t);\n\t}\n\n\t// TODO remove for 1.0\n\tif ('maxage' in loaded) {\n\t\tthrow new Error('maxage should be replaced with cache: { maxage }');\n\t}\n\n\tconst has_error_status =\n\t\tloaded.status && loaded.status >= 400 && loaded.status <= 599 && !loaded.redirect;\n\tif (loaded.error || has_error_status) {\n\t\tconst status = loaded.status;\n\n\t\tif (!loaded.error && has_error_status) {\n\t\t\treturn { status: status || 500, error: new Error() };\n\t\t}\n\n\t\tconst error = typeof loaded.error === 'string' ? new Error(loaded.error) : loaded.error;\n\n\t\tif (!(error instanceof Error)) {\n\t\t\treturn {\n\t\t\t\tstatus: 500,\n\t\t\t\terror: new Error(\n\t\t\t\t\t`\"error\" property returned from load() must be a string or instance of Error, received type \"${typeof error}\"`\n\t\t\t\t)\n\t\t\t};\n\t\t}\n\n\t\tif (!status || status < 400 || status > 599) {\n\t\t\tconsole.warn('\"error\" returned from load() without a valid status code — defaulting to 500');\n\t\t\treturn { status: 500, error };\n\t\t}\n\n\t\treturn { status, error };\n\t}\n\n\tif (loaded.redirect) {\n\t\tif (!loaded.status || Math.floor(loaded.status / 100) !== 3) {\n\t\t\tthrow new Error(\n\t\t\t\t'\"redirect\" property returned from load() must be accompanied by a 3xx status code'\n\t\t\t);\n\t\t}\n\n\t\tif (typeof loaded.redirect !== 'string') {\n\t\t\tthrow new Error('\"redirect\" property returned from load() must be a string');\n\t\t}\n\t}\n\n\tif (loaded.dependencies) {\n\t\tif (\n\t\t\t!Array.isArray(loaded.dependencies) ||\n\t\t\tloaded.dependencies.some((dep) => typeof dep !== 'string')\n\t\t) {\n\t\t\tthrow new Error('\"dependencies\" property returned from load() must be of type string[]');\n\t\t}\n\t}\n\n\t// TODO remove before 1.0\n\tif (/** @type {any} */ (loaded).context) {\n\t\tthrow new Error(\n\t\t\t'You are returning \"context\" from a load function. ' +\n\t\t\t\t'\"context\" was renamed to \"stuff\", please adjust your code accordingly.'\n\t\t);\n\t}\n\n\treturn /** @type {import('types').NormalizedLoadOutput} */ (loaded);\n}\n\n/**\n * @param {string} path\n * @param {import('types').TrailingSlash} trailing_slash\n */\nfunction normalize_path(path, trailing_slash) {\n\tif (path === '/' || trailing_slash === 'ignore') return path;\n\n\tif (trailing_slash === 'never') {\n\t\treturn path.endsWith('/') ? path.slice(0, -1) : path;\n\t} else if (trailing_slash === 'always' && !path.endsWith('/')) {\n\t\treturn path + '/';\n\t}\n\n\treturn path;\n}\n\n/** @param {HTMLDocument} doc */\nfunction get_base_uri(doc) {\n\tlet baseURI = doc.baseURI;\n\n\tif (!baseURI) {\n\t\tconst baseTags = doc.getElementsByTagName('base');\n\t\tbaseURI = baseTags.length ? baseTags[0].href : doc.URL;\n\t}\n\n\treturn baseURI;\n}\n\nfunction scroll_state() {\n\treturn {\n\t\tx: pageXOffset,\n\t\ty: pageYOffset\n\t};\n}\n\n/** @param {Event} event */\nfunction find_anchor(event) {\n\tconst node = event\n\t\t.composedPath()\n\t\t.find((e) => e instanceof Node && e.nodeName.toUpperCase() === 'A'); // SVG <a> elements have a lowercase name\n\treturn /** @type {HTMLAnchorElement | SVGAElement | undefined} */ (node);\n}\n\n/** @param {HTMLAnchorElement | SVGAElement} node */\nfunction get_href(node) {\n\treturn node instanceof SVGAElement\n\t\t? new URL(node.href.baseVal, document.baseURI)\n\t\t: new URL(node.href);\n}\n\n/** @param {any} value */\nfunction notifiable_store(value) {\n\tconst store = writable(value);\n\tlet ready = true;\n\n\tfunction notify() {\n\t\tready = true;\n\t\tstore.update((val) => val);\n\t}\n\n\t/** @param {any} new_value */\n\tfunction set(new_value) {\n\t\tready = false;\n\t\tstore.set(new_value);\n\t}\n\n\t/** @param {(value: any) => void} run */\n\tfunction subscribe(run) {\n\t\t/** @type {any} */\n\t\tlet old_value;\n\t\treturn store.subscribe((new_value) => {\n\t\t\tif (old_value === undefined || (ready && new_value !== old_value)) {\n\t\t\t\trun((old_value = new_value));\n\t\t\t}\n\t\t});\n\t}\n\n\treturn { notify, set, subscribe };\n}\n\nfunction create_updated_store() {\n\tconst { set, subscribe } = writable(false);\n\n\tconst interval = +(\n\t\t/** @type {string} */ (import.meta.env.VITE_SVELTEKIT_APP_VERSION_POLL_INTERVAL)\n\t);\n\tconst initial = import.meta.env.VITE_SVELTEKIT_APP_VERSION;\n\n\t/** @type {NodeJS.Timeout} */\n\tlet timeout;\n\n\tasync function check() {\n\t\tif (import.meta.env.DEV || import.meta.env.SSR) return false;\n\n\t\tclearTimeout(timeout);\n\n\t\tif (interval) timeout = setTimeout(check, interval);\n\n\t\tconst file = import.meta.env.VITE_SVELTEKIT_APP_VERSION_FILE;\n\n\t\tconst res = await fetch(`${assets}/${file}`, {\n\t\t\theaders: {\n\t\t\t\tpragma: 'no-cache',\n\t\t\t\t'cache-control': 'no-cache'\n\t\t\t}\n\t\t});\n\n\t\tif (res.ok) {\n\t\t\tconst { version } = await res.json();\n\t\t\tconst updated = version !== initial;\n\n\t\t\tif (updated) {\n\t\t\t\tset(true);\n\t\t\t\tclearTimeout(timeout);\n\t\t\t}\n\n\t\t\treturn updated;\n\t\t} else {\n\t\t\tthrow new Error(`Version check failed: ${res.status}`);\n\t\t}\n\t}\n\n\tif (interval) timeout = setTimeout(check, interval);\n\n\treturn {\n\t\tsubscribe,\n\t\tcheck\n\t};\n}\n\n/**\n * Hash using djb2\n * @param {import('types').StrictBody} value\n */\nfunction hash(value) {\n\tlet hash = 5381;\n\tlet i = value.length;\n\n\tif (typeof value === 'string') {\n\t\twhile (i) hash = (hash * 33) ^ value.charCodeAt(--i);\n\t} else {\n\t\twhile (i) hash = (hash * 33) ^ value[--i];\n\t}\n\n\treturn (hash >>> 0).toString(36);\n}\n\nlet loading = 0;\n\nconst native_fetch = window.fetch;\n\nfunction lock_fetch() {\n\tloading += 1;\n}\n\nfunction unlock_fetch() {\n\tloading -= 1;\n}\n\nif (import.meta.env.DEV) {\n\tlet can_inspect_stack_trace = false;\n\n\tconst check_stack_trace = async () => {\n\t\tconst stack = /** @type {string} */ (new Error().stack);\n\t\tcan_inspect_stack_trace = stack.includes('check_stack_trace');\n\t};\n\n\tcheck_stack_trace();\n\n\twindow.fetch = (input, init) => {\n\t\tconst url = input instanceof Request ? input.url : input.toString();\n\t\tconst stack = /** @type {string} */ (new Error().stack);\n\n\t\tconst heuristic = can_inspect_stack_trace ? stack.includes('load_node') : loading;\n\t\tif (heuristic) {\n\t\t\tconsole.warn(\n\t\t\t\t`Loading ${url} using \\`window.fetch\\`. For best results, use the \\`fetch\\` that is passed to your \\`load\\` function: https://kit.svelte.dev/docs/loading#input-fetch`\n\t\t\t);\n\t\t}\n\n\t\treturn native_fetch(input, init);\n\t};\n}\n\n/**\n * @param {RequestInfo} resource\n * @param {RequestInit} [opts]\n */\nfunction initial_fetch(resource, opts) {\n\tconst url = JSON.stringify(typeof resource === 'string' ? resource : resource.url);\n\n\tlet selector = `script[sveltekit\\\\:data-type=\"data\"][sveltekit\\\\:data-url=${url}]`;\n\n\tif (opts && typeof opts.body === 'string') {\n\t\tselector += `[sveltekit\\\\:data-body=\"${hash(opts.body)}\"]`;\n\t}\n\n\tconst script = document.querySelector(selector);\n\tif (script && script.textContent) {\n\t\tconst { body, ...init } = JSON.parse(script.textContent);\n\t\treturn Promise.resolve(new Response(body, init));\n\t}\n\n\treturn native_fetch(resource, opts);\n}\n\nconst param_pattern = /^(\\.\\.\\.)?(\\w+)(?:=(\\w+))?$/;\n\n/** @param {string} id */\nfunction parse_route_id(id) {\n\t/** @type {string[]} */\n\tconst names = [];\n\n\t/** @type {string[]} */\n\tconst types = [];\n\n\t// `/foo` should get an optional trailing slash, `/foo.json` should not\n\t// const add_trailing_slash = !/\\.[a-z]+$/.test(key);\n\tlet add_trailing_slash = true;\n\n\tconst pattern =\n\t\tid === ''\n\t\t\t? /^\\/$/\n\t\t\t: new RegExp(\n\t\t\t\t\t`^${decodeURIComponent(id)\n\t\t\t\t\t\t.split(/(?:@[a-zA-Z0-9_-]+)?(?:\\/|$)/)\n\t\t\t\t\t\t.map((segment, i, segments) => {\n\t\t\t\t\t\t\t// special case — /[...rest]/ could contain zero segments\n\t\t\t\t\t\t\tconst match = /^\\[\\.\\.\\.(\\w+)(?:=(\\w+))?\\]$/.exec(segment);\n\t\t\t\t\t\t\tif (match) {\n\t\t\t\t\t\t\t\tnames.push(match[1]);\n\t\t\t\t\t\t\t\ttypes.push(match[2]);\n\t\t\t\t\t\t\t\treturn '(?:/(.*))?';\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst is_last = i === segments.length - 1;\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\tsegment &&\n\t\t\t\t\t\t\t\t'/' +\n\t\t\t\t\t\t\t\t\tsegment\n\t\t\t\t\t\t\t\t\t\t.split(/\\[(.+?)\\]/)\n\t\t\t\t\t\t\t\t\t\t.map((content, i) => {\n\t\t\t\t\t\t\t\t\t\t\tif (i % 2) {\n\t\t\t\t\t\t\t\t\t\t\t\tconst [, rest, name, type] = /** @type {RegExpMatchArray} */ (\n\t\t\t\t\t\t\t\t\t\t\t\t\tparam_pattern.exec(content)\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\tnames.push(name);\n\t\t\t\t\t\t\t\t\t\t\t\ttypes.push(type);\n\t\t\t\t\t\t\t\t\t\t\t\treturn rest ? '(.*?)' : '([^/]+?)';\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\tif (is_last && content.includes('.')) add_trailing_slash = false;\n\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\tcontent // allow users to specify characters on the file system in an encoded manner\n\t\t\t\t\t\t\t\t\t\t\t\t\t.normalize()\n\t\t\t\t\t\t\t\t\t\t\t\t\t// We use [ and ] to denote parameters, so users must encode these on the file\n\t\t\t\t\t\t\t\t\t\t\t\t\t// system to match against them. We don't decode all characters since others\n\t\t\t\t\t\t\t\t\t\t\t\t\t// can already be epressed and so that '%' can be easily used directly in filenames\n\t\t\t\t\t\t\t\t\t\t\t\t\t.replace(/%5[Bb]/g, '[')\n\t\t\t\t\t\t\t\t\t\t\t\t\t.replace(/%5[Dd]/g, ']')\n\t\t\t\t\t\t\t\t\t\t\t\t\t// '#', '/', and '?' can only appear in URL path segments in an encoded manner.\n\t\t\t\t\t\t\t\t\t\t\t\t\t// They will not be touched by decodeURI so need to be encoded here, so\n\t\t\t\t\t\t\t\t\t\t\t\t\t// that we can match against them.\n\t\t\t\t\t\t\t\t\t\t\t\t\t// We skip '/' since you can't create a file with it on any OS\n\t\t\t\t\t\t\t\t\t\t\t\t\t.replace(/#/g, '%23')\n\t\t\t\t\t\t\t\t\t\t\t\t\t.replace(/\\?/g, '%3F')\n\t\t\t\t\t\t\t\t\t\t\t\t\t// escape characters that have special meaning in regex\n\t\t\t\t\t\t\t\t\t\t\t\t\t.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n\t\t\t\t\t\t\t\t\t\t\t); // TODO handle encoding\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t.join('')\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.join('')}${add_trailing_slash ? '/?' : ''}$`\n\t\t\t  );\n\n\treturn { pattern, names, types };\n}\n\n/**\n * @param {RegExpMatchArray} match\n * @param {string[]} names\n * @param {string[]} types\n * @param {Record<string, import('types').ParamMatcher>} matchers\n */\nfunction exec(match, names, types, matchers) {\n\t/** @type {Record<string, string>} */\n\tconst params = {};\n\n\tfor (let i = 0; i < names.length; i += 1) {\n\t\tconst name = names[i];\n\t\tconst type = types[i];\n\t\tconst value = match[i + 1] || '';\n\n\t\tif (type) {\n\t\t\tconst matcher = matchers[type];\n\t\t\tif (!matcher) throw new Error(`Missing \"${type}\" param matcher`); // TODO do this ahead of time?\n\n\t\t\tif (!matcher(value)) return;\n\t\t}\n\n\t\tparams[name] = value;\n\t}\n\n\treturn params;\n}\n\n/**\n * @param {import('types').CSRComponentLoader[]} components\n * @param {Record<string, [number[], number[], 1?]>} dictionary\n * @param {Record<string, (param: string) => boolean>} matchers\n * @returns {import('types').CSRRoute[]}\n */\nfunction parse(components, dictionary, matchers) {\n\tconst routes = Object.entries(dictionary).map(([id, [a, b, has_shadow]]) => {\n\t\tconst { pattern, names, types } = parse_route_id(id);\n\n\t\treturn {\n\t\t\tid,\n\t\t\t/** @param {string} path */\n\t\t\texec: (path) => {\n\t\t\t\tconst match = pattern.exec(path);\n\t\t\t\tif (match) return exec(match, names, types, matchers);\n\t\t\t},\n\t\t\ta: a.map((n) => components[n]),\n\t\t\tb: b.map((n) => components[n]),\n\t\t\thas_shadow: !!has_shadow\n\t\t};\n\t});\n\n\treturn routes;\n}\n\nconst SCROLL_KEY = 'sveltekit:scroll';\nconst INDEX_KEY = 'sveltekit:index';\n\nconst routes = parse(components, dictionary, matchers);\n\n// we import the root layout/error components eagerly, so that\n// connectivity errors after initialisation don't nuke the app\nconst default_layout = components[0]();\nconst default_error = components[1]();\n\nconst root_stuff = {};\n\n// We track the scroll position associated with each history entry in sessionStorage,\n// rather than on history.state itself, because when navigation is driven by\n// popstate it's too late to update the scroll position associated with the\n// state we're navigating from\n\n/** @typedef {{ x: number, y: number }} ScrollPosition */\n/** @type {Record<number, ScrollPosition>} */\nlet scroll_positions = {};\ntry {\n\tscroll_positions = JSON.parse(sessionStorage[SCROLL_KEY]);\n} catch {\n\t// do nothing\n}\n\n/** @param {number} index */\nfunction update_scroll_positions(index) {\n\tscroll_positions[index] = scroll_state();\n}\n\n/**\n * @param {{\n *   target: Element;\n *   session: App.Session;\n *   base: string;\n *   trailing_slash: import('types').TrailingSlash;\n * }} opts\n * @returns {import('./types').Client}\n */\nfunction create_client({ target, session, base, trailing_slash }) {\n\t/** @type {Map<string, import('./types').NavigationResult>} */\n\tconst cache = new Map();\n\n\t/** @type {Array<((href: string) => boolean)>} */\n\tconst invalidated = [];\n\n\tconst stores = {\n\t\turl: notifiable_store({}),\n\t\tpage: notifiable_store({}),\n\t\tnavigating: writable(/** @type {import('types').Navigation | null} */ (null)),\n\t\tsession: writable(session),\n\t\tupdated: create_updated_store()\n\t};\n\n\t/** @type {{id: string | null, promise: Promise<import('./types').NavigationResult | undefined> | null}} */\n\tconst load_cache = {\n\t\tid: null,\n\t\tpromise: null\n\t};\n\n\tconst callbacks = {\n\t\t/** @type {Array<(opts: { from: URL, to: URL | null, cancel: () => void }) => void>} */\n\t\tbefore_navigate: [],\n\n\t\t/** @type {Array<(opts: { from: URL | null, to: URL }) => void>} */\n\t\tafter_navigate: []\n\t};\n\n\t/** @type {import('./types').NavigationState} */\n\tlet current = {\n\t\tbranch: [],\n\t\terror: null,\n\t\tsession_id: 0,\n\t\tstuff: root_stuff,\n\t\t// @ts-ignore - we need the initial value to be null\n\t\turl: null\n\t};\n\n\tlet started = false;\n\tlet autoscroll = true;\n\tlet updating = false;\n\tlet session_id = 1;\n\n\t/** @type {Promise<void> | null} */\n\tlet invalidating = null;\n\n\t/** @type {import('svelte').SvelteComponent} */\n\tlet root;\n\n\t/** @type {App.Session} */\n\tlet $session;\n\n\tlet ready = false;\n\tstores.session.subscribe(async (value) => {\n\t\t$session = value;\n\n\t\tif (!ready) return;\n\t\tsession_id += 1;\n\n\t\tupdate(new URL(location.href), [], true);\n\t});\n\tready = true;\n\n\tlet router_enabled = true;\n\n\t// keeping track of the history index in order to prevent popstate navigation events if needed\n\tlet current_history_index = history.state?.[INDEX_KEY];\n\n\tif (!current_history_index) {\n\t\t// we use Date.now() as an offset so that cross-document navigations\n\t\t// within the app don't result in data loss\n\t\tcurrent_history_index = Date.now();\n\n\t\t// create initial history entry, so we can return here\n\t\thistory.replaceState(\n\t\t\t{ ...history.state, [INDEX_KEY]: current_history_index },\n\t\t\t'',\n\t\t\tlocation.href\n\t\t);\n\t}\n\n\t// if we reload the page, or Cmd-Shift-T back to it,\n\t// recover scroll position\n\tconst scroll = scroll_positions[current_history_index];\n\tif (scroll) {\n\t\thistory.scrollRestoration = 'manual';\n\t\tscrollTo(scroll.x, scroll.y);\n\t}\n\n\tlet hash_navigating = false;\n\n\t/** @type {import('types').Page} */\n\tlet page;\n\n\t/** @type {{}} */\n\tlet token;\n\n\t/**\n\t * @param {string} href\n\t * @param {{ noscroll?: boolean; replaceState?: boolean; keepfocus?: boolean; state?: any }} opts\n\t * @param {string[]} redirect_chain\n\t */\n\tasync function goto(\n\t\thref,\n\t\t{ noscroll = false, replaceState = false, keepfocus = false, state = {} },\n\t\tredirect_chain\n\t) {\n\t\tconst url = new URL(href, get_base_uri(document));\n\n\t\tif (router_enabled) {\n\t\t\treturn navigate({\n\t\t\t\turl,\n\t\t\t\tscroll: noscroll ? scroll_state() : null,\n\t\t\t\tkeepfocus,\n\t\t\t\tredirect_chain,\n\t\t\t\tdetails: {\n\t\t\t\t\tstate,\n\t\t\t\t\treplaceState\n\t\t\t\t},\n\t\t\t\taccepted: () => {},\n\t\t\t\tblocked: () => {}\n\t\t\t});\n\t\t}\n\n\t\tawait native_navigation(url);\n\t}\n\n\t/** @param {URL} url */\n\tasync function prefetch(url) {\n\t\tconst intent = get_navigation_intent(url);\n\n\t\tif (!intent) {\n\t\t\tthrow new Error('Attempted to prefetch a URL that does not belong to this app');\n\t\t}\n\n\t\tload_cache.promise = load_route(intent, false);\n\t\tload_cache.id = intent.id;\n\n\t\treturn load_cache.promise;\n\t}\n\n\t/**\n\t * Returns `true` if update completes, `false` if it is aborted\n\t * @param {URL} url\n\t * @param {string[]} redirect_chain\n\t * @param {boolean} no_cache\n\t * @param {{hash?: string, scroll: { x: number, y: number } | null, keepfocus: boolean, details: { replaceState: boolean, state: any } | null}} [opts]\n\t * @param {() => void} [callback]\n\t */\n\tasync function update(url, redirect_chain, no_cache, opts, callback) {\n\t\tconst intent = get_navigation_intent(url);\n\n\t\tconst current_token = (token = {});\n\t\tlet navigation_result = intent && (await load_route(intent, no_cache));\n\n\t\tif (\n\t\t\t!navigation_result &&\n\t\t\turl.origin === location.origin &&\n\t\t\turl.pathname === location.pathname\n\t\t) {\n\t\t\t// this could happen in SPA fallback mode if the user navigated to\n\t\t\t// `/non-existent-page`. if we fall back to reloading the page, it\n\t\t\t// will create an infinite loop. so whereas we normally handle\n\t\t\t// unknown routes by going to the server, in this special case\n\t\t\t// we render a client-side error page instead\n\t\t\tnavigation_result = await load_root_error_page({\n\t\t\t\tstatus: 404,\n\t\t\t\terror: new Error(`Not found: ${url.pathname}`),\n\t\t\t\turl,\n\t\t\t\trouteId: null\n\t\t\t});\n\t\t}\n\n\t\tif (!navigation_result) {\n\t\t\tawait native_navigation(url);\n\t\t\treturn false; // unnecessary, but TypeScript prefers it this way\n\t\t}\n\n\t\t// abort if user navigated during update\n\t\tif (token !== current_token) return false;\n\n\t\tinvalidated.length = 0;\n\n\t\tif (navigation_result.redirect) {\n\t\t\tif (redirect_chain.length > 10 || redirect_chain.includes(url.pathname)) {\n\t\t\t\tnavigation_result = await load_root_error_page({\n\t\t\t\t\tstatus: 500,\n\t\t\t\t\terror: new Error('Redirect loop'),\n\t\t\t\t\turl,\n\t\t\t\t\trouteId: null\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tif (router_enabled) {\n\t\t\t\t\tgoto(new URL(navigation_result.redirect, url).href, {}, [\n\t\t\t\t\t\t...redirect_chain,\n\t\t\t\t\t\turl.pathname\n\t\t\t\t\t]);\n\t\t\t\t} else {\n\t\t\t\t\tawait native_navigation(new URL(navigation_result.redirect, location.href));\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (navigation_result.props?.page?.status >= 400) {\n\t\t\tconst updated = await stores.updated.check();\n\t\t\tif (updated) {\n\t\t\t\tawait native_navigation(url);\n\t\t\t}\n\t\t}\n\n\t\tupdating = true;\n\n\t\tif (opts && opts.details) {\n\t\t\tconst { details } = opts;\n\t\t\tconst change = details.replaceState ? 0 : 1;\n\t\t\tdetails.state[INDEX_KEY] = current_history_index += change;\n\t\t\thistory[details.replaceState ? 'replaceState' : 'pushState'](details.state, '', url);\n\t\t}\n\n\t\tif (started) {\n\t\t\tcurrent = navigation_result.state;\n\n\t\t\tif (navigation_result.props.page) {\n\t\t\t\tnavigation_result.props.page.url = url;\n\t\t\t}\n\n\t\t\troot.$set(navigation_result.props);\n\t\t} else {\n\t\t\tinitialize(navigation_result);\n\t\t}\n\n\t\t// opts must be passed if we're navigating\n\t\tif (opts) {\n\t\t\tconst { scroll, keepfocus } = opts;\n\n\t\t\tif (!keepfocus) {\n\t\t\t\t// Reset page selection and focus\n\t\t\t\t// We try to mimic browsers' behaviour as closely as possible by targeting the\n\t\t\t\t// first scrollable region, but unfortunately it's not a perfect match — e.g.\n\t\t\t\t// shift-tabbing won't immediately cycle up from the end of the page on Chromium\n\t\t\t\t// See https://html.spec.whatwg.org/multipage/interaction.html#get-the-focusable-area\n\t\t\t\tconst root = document.body;\n\t\t\t\tconst tabindex = root.getAttribute('tabindex');\n\n\t\t\t\tgetSelection()?.removeAllRanges();\n\t\t\t\troot.tabIndex = -1;\n\t\t\t\troot.focus({ preventScroll: true });\n\n\t\t\t\t// restore `tabindex` as to prevent `root` from stealing input from elements\n\t\t\t\tif (tabindex !== null) {\n\t\t\t\t\troot.setAttribute('tabindex', tabindex);\n\t\t\t\t} else {\n\t\t\t\t\troot.removeAttribute('tabindex');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// need to render the DOM before we can scroll to the rendered elements\n\t\t\tawait tick();\n\n\t\t\tif (autoscroll) {\n\t\t\t\tconst deep_linked = url.hash && document.getElementById(url.hash.slice(1));\n\t\t\t\tif (scroll) {\n\t\t\t\t\tscrollTo(scroll.x, scroll.y);\n\t\t\t\t} else if (deep_linked) {\n\t\t\t\t\t// Here we use `scrollIntoView` on the element instead of `scrollTo`\n\t\t\t\t\t// because it natively supports the `scroll-margin` and `scroll-behavior`\n\t\t\t\t\t// CSS properties.\n\t\t\t\t\tdeep_linked.scrollIntoView();\n\t\t\t\t} else {\n\t\t\t\t\tscrollTo(0, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// in this case we're simply invalidating\n\t\t\tawait tick();\n\t\t}\n\n\t\tload_cache.promise = null;\n\t\tload_cache.id = null;\n\t\tautoscroll = true;\n\n\t\tif (navigation_result.props.page) {\n\t\t\tpage = navigation_result.props.page;\n\t\t}\n\n\t\tconst leaf_node = navigation_result.state.branch[navigation_result.state.branch.length - 1];\n\t\trouter_enabled = leaf_node?.module.router !== false;\n\n\t\tif (callback) callback();\n\n\t\tupdating = false;\n\t}\n\n\t/** @param {import('./types').NavigationResult} result */\n\tfunction initialize(result) {\n\t\tcurrent = result.state;\n\n\t\tconst style = document.querySelector('style[data-sveltekit]');\n\t\tif (style) style.remove();\n\n\t\tpage = result.props.page;\n\n\t\troot = new Root({\n\t\t\ttarget,\n\t\t\tprops: { ...result.props, stores },\n\t\t\thydrate: true\n\t\t});\n\n\t\tif (router_enabled) {\n\t\t\tconst navigation = { from: null, to: new URL(location.href) };\n\t\t\tcallbacks.after_navigate.forEach((fn) => fn(navigation));\n\t\t}\n\n\t\tstarted = true;\n\t}\n\n\t/**\n\t *\n\t * @param {{\n\t *   url: URL;\n\t *   params: Record<string, string>;\n\t *   stuff: Record<string, any>;\n\t *   branch: Array<import('./types').BranchNode | undefined>;\n\t *   status: number;\n\t *   error: Error | null;\n\t *   routeId: string | null;\n\t * }} opts\n\t */\n\tasync function get_navigation_result_from_branch({\n\t\turl,\n\t\tparams,\n\t\tstuff,\n\t\tbranch,\n\t\tstatus,\n\t\terror,\n\t\trouteId\n\t}) {\n\t\tconst filtered = /** @type {import('./types').BranchNode[] } */ (branch.filter(Boolean));\n\t\tconst redirect = filtered.find((f) => f.loaded?.redirect);\n\n\t\t/** @type {import('./types').NavigationResult} */\n\t\tconst result = {\n\t\t\tredirect: redirect?.loaded?.redirect,\n\t\t\tstate: {\n\t\t\t\turl,\n\t\t\t\tparams,\n\t\t\t\tbranch,\n\t\t\t\terror,\n\t\t\t\tstuff,\n\t\t\t\tsession_id\n\t\t\t},\n\t\t\tprops: {\n\t\t\t\tcomponents: filtered.map((node) => node.module.default)\n\t\t\t}\n\t\t};\n\n\t\tfor (let i = 0; i < filtered.length; i += 1) {\n\t\t\tconst loaded = filtered[i].loaded;\n\t\t\tresult.props[`props_${i}`] = loaded ? await loaded.props : null;\n\t\t}\n\n\t\tconst page_changed =\n\t\t\t!current.url ||\n\t\t\turl.href !== current.url.href ||\n\t\t\tcurrent.error !== error ||\n\t\t\tcurrent.stuff !== stuff;\n\n\t\tif (page_changed) {\n\t\t\tresult.props.page = { error, params, routeId, status, stuff, url };\n\n\t\t\t// TODO remove this for 1.0\n\t\t\t/**\n\t\t\t * @param {string} property\n\t\t\t * @param {string} replacement\n\t\t\t */\n\t\t\tconst print_error = (property, replacement) => {\n\t\t\t\tObject.defineProperty(result.props.page, property, {\n\t\t\t\t\tget: () => {\n\t\t\t\t\t\tthrow new Error(`$page.${property} has been replaced by $page.url.${replacement}`);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tprint_error('origin', 'origin');\n\t\t\tprint_error('path', 'pathname');\n\t\t\tprint_error('query', 'searchParams');\n\t\t}\n\n\t\tconst leaf = filtered[filtered.length - 1];\n\t\tconst load_cache = leaf?.loaded?.cache;\n\n\t\tif (load_cache) {\n\t\t\tconst key = url.pathname + url.search; // omit hash\n\t\t\tlet ready = false;\n\n\t\t\tconst clear = () => {\n\t\t\t\tif (cache.get(key) === result) {\n\t\t\t\t\tcache.delete(key);\n\t\t\t\t}\n\n\t\t\t\tunsubscribe();\n\t\t\t\tclearTimeout(timeout);\n\t\t\t};\n\n\t\t\tconst timeout = setTimeout(clear, load_cache.maxage * 1000);\n\n\t\t\tconst unsubscribe = stores.session.subscribe(() => {\n\t\t\t\tif (ready) clear();\n\t\t\t});\n\n\t\t\tready = true;\n\n\t\t\tcache.set(key, result);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * @param {{\n\t *   status?: number;\n\t *   error?: Error;\n\t *   module: import('types').CSRComponent;\n\t *   url: URL;\n\t *   params: Record<string, string>;\n\t *   stuff: Record<string, any>;\n\t *   props?: Record<string, any>;\n\t *   routeId: string | null;\n\t * }} options\n\t */\n\tasync function load_node({ status, error, module, url, params, stuff, props, routeId }) {\n\t\t/** @type {import('./types').BranchNode} */\n\t\tconst node = {\n\t\t\tmodule,\n\t\t\tuses: {\n\t\t\t\tparams: new Set(),\n\t\t\t\turl: false,\n\t\t\t\tsession: false,\n\t\t\t\tstuff: false,\n\t\t\t\tdependencies: new Set()\n\t\t\t},\n\t\t\tloaded: null,\n\t\t\tstuff\n\t\t};\n\n\t\t/** @param dep {string} */\n\t\tfunction add_dependency(dep) {\n\t\t\tconst { href } = new URL(dep, url);\n\t\t\tnode.uses.dependencies.add(href);\n\t\t}\n\n\t\tif (props) {\n\t\t\t// shadow endpoint props means we need to mark this URL as a dependency of itself\n\t\t\tnode.uses.dependencies.add(url.href);\n\t\t}\n\n\t\t/** @type {Record<string, string>} */\n\t\tconst uses_params = {};\n\t\tfor (const key in params) {\n\t\t\tObject.defineProperty(uses_params, key, {\n\t\t\t\tget() {\n\t\t\t\t\tnode.uses.params.add(key);\n\t\t\t\t\treturn params[key];\n\t\t\t\t},\n\t\t\t\tenumerable: true\n\t\t\t});\n\t\t}\n\n\t\tconst session = $session;\n\n\t\tif (module.load) {\n\t\t\t/** @type {import('types').LoadEvent} */\n\t\t\tconst load_input = {\n\t\t\t\trouteId,\n\t\t\t\tparams: uses_params,\n\t\t\t\tprops: props || {},\n\t\t\t\tget url() {\n\t\t\t\t\tnode.uses.url = true;\n\n\t\t\t\t\treturn new Proxy(url, {\n\t\t\t\t\t\tget: (target, property) => {\n\t\t\t\t\t\t\tif (property === 'hash') {\n\t\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\t'url.hash is inaccessible from load. Consider accessing hash from the page store within the script tag of your component.'\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn Reflect.get(target, property, target);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tget session() {\n\t\t\t\t\tnode.uses.session = true;\n\t\t\t\t\treturn session;\n\t\t\t\t},\n\t\t\t\tget stuff() {\n\t\t\t\t\tnode.uses.stuff = true;\n\t\t\t\t\treturn { ...stuff };\n\t\t\t\t},\n\t\t\t\tasync fetch(resource, init) {\n\t\t\t\t\tlet requested;\n\n\t\t\t\t\tif (typeof resource === 'string') {\n\t\t\t\t\t\trequested = resource;\n\t\t\t\t\t} else {\n\t\t\t\t\t\trequested = resource.url;\n\n\t\t\t\t\t\t// we're not allowed to modify the received `Request` object, so in order\n\t\t\t\t\t\t// to fixup relative urls we create a new equivalent `init` object instead\n\t\t\t\t\t\tinit = {\n\t\t\t\t\t\t\t// the request body must be consumed in memory until browsers\n\t\t\t\t\t\t\t// implement streaming request bodies and/or the body getter\n\t\t\t\t\t\t\tbody:\n\t\t\t\t\t\t\t\tresource.method === 'GET' || resource.method === 'HEAD'\n\t\t\t\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t\t\t\t: await resource.blob(),\n\t\t\t\t\t\t\tcache: resource.cache,\n\t\t\t\t\t\t\tcredentials: resource.credentials,\n\t\t\t\t\t\t\theaders: resource.headers,\n\t\t\t\t\t\t\tintegrity: resource.integrity,\n\t\t\t\t\t\t\tkeepalive: resource.keepalive,\n\t\t\t\t\t\t\tmethod: resource.method,\n\t\t\t\t\t\t\tmode: resource.mode,\n\t\t\t\t\t\t\tredirect: resource.redirect,\n\t\t\t\t\t\t\treferrer: resource.referrer,\n\t\t\t\t\t\t\treferrerPolicy: resource.referrerPolicy,\n\t\t\t\t\t\t\tsignal: resource.signal,\n\t\t\t\t\t\t\t...init\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// we must fixup relative urls so they are resolved from the target page\n\t\t\t\t\tconst normalized = new URL(requested, url).href;\n\t\t\t\t\tadd_dependency(normalized);\n\n\t\t\t\t\t// prerendered pages may be served from any origin, so `initial_fetch` urls shouldn't be normalized\n\t\t\t\t\treturn started ? native_fetch(normalized, init) : initial_fetch(requested, init);\n\t\t\t\t},\n\t\t\t\tstatus: status ?? null,\n\t\t\t\terror: error ?? null\n\t\t\t};\n\n\t\t\tif (import.meta.env.DEV) {\n\t\t\t\t// TODO remove this for 1.0\n\t\t\t\tObject.defineProperty(load_input, 'page', {\n\t\t\t\t\tget: () => {\n\t\t\t\t\t\tthrow new Error('`page` in `load` functions has been replaced by `url` and `params`');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet loaded;\n\n\t\t\tif (import.meta.env.DEV) {\n\t\t\t\ttry {\n\t\t\t\t\tlock_fetch();\n\t\t\t\t\tloaded = await module.load.call(null, load_input);\n\t\t\t\t} finally {\n\t\t\t\t\tunlock_fetch();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tloaded = await module.load.call(null, load_input);\n\t\t\t}\n\n\t\t\tif (!loaded) {\n\t\t\t\tthrow new Error('load function must return a value');\n\t\t\t}\n\n\t\t\tnode.loaded = normalize(loaded);\n\t\t\tif (node.loaded.stuff) node.stuff = node.loaded.stuff;\n\t\t\tif (node.loaded.dependencies) {\n\t\t\t\tnode.loaded.dependencies.forEach(add_dependency);\n\t\t\t}\n\t\t} else if (props) {\n\t\t\tnode.loaded = normalize({ props });\n\t\t}\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * @param {import('./types').NavigationIntent} intent\n\t * @param {boolean} no_cache\n\t */\n\tasync function load_route({ id, url, params, route }, no_cache) {\n\t\tif (load_cache.id === id && load_cache.promise) {\n\t\t\treturn load_cache.promise;\n\t\t}\n\n\t\tif (!no_cache) {\n\t\t\tconst cached = cache.get(id);\n\t\t\tif (cached) return cached;\n\t\t}\n\n\t\tconst { a, b, has_shadow } = route;\n\n\t\tconst changed = current.url && {\n\t\t\turl: id !== current.url.pathname + current.url.search,\n\t\t\tparams: Object.keys(params).filter((key) => current.params[key] !== params[key]),\n\t\t\tsession: session_id !== current.session_id\n\t\t};\n\n\t\t/** @type {Array<import('./types').BranchNode | undefined>} */\n\t\tlet branch = [];\n\n\t\t/** @type {Record<string, any>} */\n\t\tlet stuff = root_stuff;\n\t\tlet stuff_changed = false;\n\n\t\t/** @type {number | undefined} */\n\t\tlet status = 200;\n\n\t\t/** @type {Error | null} */\n\t\tlet error = null;\n\n\t\t// preload modules to avoid waterfall, but handle rejections\n\t\t// so they don't get reported to Sentry et al (we don't need\n\t\t// to act on the failures at this point)\n\t\ta.forEach((loader) => loader().catch(() => {}));\n\n\t\tload: for (let i = 0; i < a.length; i += 1) {\n\t\t\t/** @type {import('./types').BranchNode | undefined} */\n\t\t\tlet node;\n\n\t\t\ttry {\n\t\t\t\tif (!a[i]) continue;\n\n\t\t\t\tconst module = await a[i]();\n\t\t\t\tconst previous = current.branch[i];\n\n\t\t\t\tconst changed_since_last_render =\n\t\t\t\t\t!previous ||\n\t\t\t\t\tmodule !== previous.module ||\n\t\t\t\t\t(changed.url && previous.uses.url) ||\n\t\t\t\t\tchanged.params.some((param) => previous.uses.params.has(param)) ||\n\t\t\t\t\t(changed.session && previous.uses.session) ||\n\t\t\t\t\tArray.from(previous.uses.dependencies).some((dep) => invalidated.some((fn) => fn(dep))) ||\n\t\t\t\t\t(stuff_changed && previous.uses.stuff);\n\n\t\t\t\tif (changed_since_last_render) {\n\t\t\t\t\t/** @type {Record<string, any>} */\n\t\t\t\t\tlet props = {};\n\n\t\t\t\t\tconst is_shadow_page = has_shadow && i === a.length - 1;\n\n\t\t\t\t\tif (is_shadow_page) {\n\t\t\t\t\t\tconst res = await native_fetch(\n\t\t\t\t\t\t\t`${url.pathname}${url.pathname.endsWith('/') ? '' : '/'}__data.json${url.search}`,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t\t'x-sveltekit-load': 'true'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (res.ok) {\n\t\t\t\t\t\t\tconst redirect = res.headers.get('x-sveltekit-location');\n\n\t\t\t\t\t\t\tif (redirect) {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tredirect,\n\t\t\t\t\t\t\t\t\tprops: {},\n\t\t\t\t\t\t\t\t\tstate: current\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tprops = res.status === 204 ? {} : await res.json();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstatus = res.status;\n\t\t\t\t\t\t\terror = new Error('Failed to load data');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!error) {\n\t\t\t\t\t\tnode = await load_node({\n\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\tprops,\n\t\t\t\t\t\t\tstuff,\n\t\t\t\t\t\t\trouteId: route.id\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (node) {\n\t\t\t\t\t\tif (is_shadow_page) {\n\t\t\t\t\t\t\tnode.uses.url = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (node.loaded) {\n\t\t\t\t\t\t\tif (node.loaded.error) {\n\t\t\t\t\t\t\t\tstatus = node.loaded.status;\n\t\t\t\t\t\t\t\terror = node.loaded.error;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (node.loaded.redirect) {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tredirect: node.loaded.redirect,\n\t\t\t\t\t\t\t\t\tprops: {},\n\t\t\t\t\t\t\t\t\tstate: current\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (node.loaded.stuff) {\n\t\t\t\t\t\t\t\tstuff_changed = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tnode = previous;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tstatus = 500;\n\t\t\t\terror = coalesce_to_error(e);\n\t\t\t}\n\n\t\t\tif (error) {\n\t\t\t\twhile (i--) {\n\t\t\t\t\tif (b[i]) {\n\t\t\t\t\t\tlet error_loaded;\n\n\t\t\t\t\t\t/** @type {import('./types').BranchNode | undefined} */\n\t\t\t\t\t\tlet node_loaded;\n\t\t\t\t\t\tlet j = i;\n\t\t\t\t\t\twhile (!(node_loaded = branch[j])) {\n\t\t\t\t\t\t\tj -= 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\terror_loaded = await load_node({\n\t\t\t\t\t\t\t\tstatus,\n\t\t\t\t\t\t\t\terror,\n\t\t\t\t\t\t\t\tmodule: await b[i](),\n\t\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\t\tstuff: node_loaded.stuff,\n\t\t\t\t\t\t\t\trouteId: route.id\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tif (error_loaded?.loaded?.error) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (error_loaded?.loaded?.stuff) {\n\t\t\t\t\t\t\t\tstuff = {\n\t\t\t\t\t\t\t\t\t...stuff,\n\t\t\t\t\t\t\t\t\t...error_loaded.loaded.stuff\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbranch = branch.slice(0, j + 1).concat(error_loaded);\n\t\t\t\t\t\t\tbreak load;\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn await load_root_error_page({\n\t\t\t\t\tstatus,\n\t\t\t\t\terror,\n\t\t\t\t\turl,\n\t\t\t\t\trouteId: route.id\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tif (node?.loaded?.stuff) {\n\t\t\t\t\tstuff = {\n\t\t\t\t\t\t...stuff,\n\t\t\t\t\t\t...node.loaded.stuff\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tbranch.push(node);\n\t\t\t}\n\t\t}\n\n\t\treturn await get_navigation_result_from_branch({\n\t\t\turl,\n\t\t\tparams,\n\t\t\tstuff,\n\t\t\tbranch,\n\t\t\tstatus,\n\t\t\terror,\n\t\t\trouteId: route.id\n\t\t});\n\t}\n\n\t/**\n\t * @param {{\n\t *   status: number;\n\t *   error: Error;\n\t *   url: URL;\n\t *   routeId: string | null\n\t * }} opts\n\t */\n\tasync function load_root_error_page({ status, error, url, routeId }) {\n\t\t/** @type {Record<string, string>} */\n\t\tconst params = {}; // error page does not have params\n\n\t\tconst root_layout = await load_node({\n\t\t\tmodule: await default_layout,\n\t\t\turl,\n\t\t\tparams,\n\t\t\tstuff: {},\n\t\t\trouteId\n\t\t});\n\n\t\tconst root_error = await load_node({\n\t\t\tstatus,\n\t\t\terror,\n\t\t\tmodule: await default_error,\n\t\t\turl,\n\t\t\tparams,\n\t\t\tstuff: (root_layout && root_layout.loaded && root_layout.loaded.stuff) || {},\n\t\t\trouteId\n\t\t});\n\n\t\treturn await get_navigation_result_from_branch({\n\t\t\turl,\n\t\t\tparams,\n\t\t\tstuff: {\n\t\t\t\t...root_layout?.loaded?.stuff,\n\t\t\t\t...root_error?.loaded?.stuff\n\t\t\t},\n\t\t\tbranch: [root_layout, root_error],\n\t\t\tstatus,\n\t\t\terror,\n\t\t\trouteId\n\t\t});\n\t}\n\n\t/** @param {URL} url */\n\tfunction get_navigation_intent(url) {\n\t\tif (url.origin !== location.origin || !url.pathname.startsWith(base)) return;\n\n\t\tconst path = decodeURI(url.pathname.slice(base.length) || '/');\n\n\t\tfor (const route of routes) {\n\t\t\tconst params = route.exec(path);\n\n\t\t\tif (params) {\n\t\t\t\t/** @type {import('./types').NavigationIntent} */\n\t\t\t\tconst intent = {\n\t\t\t\t\tid: url.pathname + url.search,\n\t\t\t\t\troute,\n\t\t\t\t\tparams,\n\t\t\t\t\turl\n\t\t\t\t};\n\n\t\t\t\treturn intent;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {{\n\t *   url: URL;\n\t *   scroll: { x: number, y: number } | null;\n\t *   keepfocus: boolean;\n\t *   redirect_chain: string[];\n\t *   details: {\n\t *     replaceState: boolean;\n\t *     state: any;\n\t *   } | null;\n\t *   accepted: () => void;\n\t *   blocked: () => void;\n\t * }} opts\n\t */\n\tasync function navigate({ url, scroll, keepfocus, redirect_chain, details, accepted, blocked }) {\n\t\tconst from = current.url;\n\t\tlet should_block = false;\n\n\t\tconst navigation = {\n\t\t\tfrom,\n\t\t\tto: url,\n\t\t\tcancel: () => (should_block = true)\n\t\t};\n\n\t\tcallbacks.before_navigate.forEach((fn) => fn(navigation));\n\n\t\tif (should_block) {\n\t\t\tblocked();\n\t\t\treturn;\n\t\t}\n\n\t\tconst pathname = normalize_path(url.pathname, trailing_slash);\n\t\tconst normalized = new URL(url.origin + pathname + url.search + url.hash);\n\n\t\tupdate_scroll_positions(current_history_index);\n\n\t\taccepted();\n\n\t\tif (started) {\n\t\t\tstores.navigating.set({\n\t\t\t\tfrom: current.url,\n\t\t\t\tto: normalized\n\t\t\t});\n\t\t}\n\n\t\tawait update(\n\t\t\tnormalized,\n\t\t\tredirect_chain,\n\t\t\tfalse,\n\t\t\t{\n\t\t\t\tscroll,\n\t\t\t\tkeepfocus,\n\t\t\t\tdetails\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tconst navigation = { from, to: normalized };\n\t\t\t\tcallbacks.after_navigate.forEach((fn) => fn(navigation));\n\n\t\t\t\tstores.navigating.set(null);\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * Loads `href` the old-fashioned way, with a full page reload.\n\t * Returns a `Promise` that never resolves (to prevent any\n\t * subsequent work, e.g. history manipulation, from happening)\n\t * @param {URL} url\n\t */\n\tfunction native_navigation(url) {\n\t\tlocation.href = url.href;\n\t\treturn new Promise(() => {});\n\t}\n\n\tif (import.meta.hot) {\n\t\timport.meta.hot.on('vite:beforeUpdate', () => {\n\t\t\tif (current.error) location.reload();\n\t\t});\n\t}\n\n\treturn {\n\t\tafter_navigate: (fn) => {\n\t\t\tonMount(() => {\n\t\t\t\tcallbacks.after_navigate.push(fn);\n\n\t\t\t\treturn () => {\n\t\t\t\t\tconst i = callbacks.after_navigate.indexOf(fn);\n\t\t\t\t\tcallbacks.after_navigate.splice(i, 1);\n\t\t\t\t};\n\t\t\t});\n\t\t},\n\n\t\tbefore_navigate: (fn) => {\n\t\t\tonMount(() => {\n\t\t\t\tcallbacks.before_navigate.push(fn);\n\n\t\t\t\treturn () => {\n\t\t\t\t\tconst i = callbacks.before_navigate.indexOf(fn);\n\t\t\t\t\tcallbacks.before_navigate.splice(i, 1);\n\t\t\t\t};\n\t\t\t});\n\t\t},\n\n\t\tdisable_scroll_handling: () => {\n\t\t\tif (import.meta.env.DEV && started && !updating) {\n\t\t\t\tthrow new Error('Can only disable scroll handling during navigation');\n\t\t\t}\n\n\t\t\tif (updating || !started) {\n\t\t\t\tautoscroll = false;\n\t\t\t}\n\t\t},\n\n\t\tgoto: (href, opts = {}) => goto(href, opts, []),\n\n\t\tinvalidate: (resource) => {\n\t\t\tif (typeof resource === 'function') {\n\t\t\t\tinvalidated.push(resource);\n\t\t\t} else {\n\t\t\t\tconst { href } = new URL(resource, location.href);\n\t\t\t\tinvalidated.push((dep) => dep === href);\n\t\t\t}\n\n\t\t\tif (!invalidating) {\n\t\t\t\tinvalidating = Promise.resolve().then(async () => {\n\t\t\t\t\tawait update(new URL(location.href), [], true);\n\n\t\t\t\t\tinvalidating = null;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn invalidating;\n\t\t},\n\n\t\tprefetch: async (href) => {\n\t\t\tconst url = new URL(href, get_base_uri(document));\n\t\t\tawait prefetch(url);\n\t\t},\n\n\t\t// TODO rethink this API\n\t\tprefetch_routes: async (pathnames) => {\n\t\t\tconst matching = pathnames\n\t\t\t\t? routes.filter((route) => pathnames.some((pathname) => route.exec(pathname)))\n\t\t\t\t: routes;\n\n\t\t\tconst promises = matching.map((r) => Promise.all(r.a.map((load) => load())));\n\n\t\t\tawait Promise.all(promises);\n\t\t},\n\n\t\t_start_router: () => {\n\t\t\thistory.scrollRestoration = 'manual';\n\n\t\t\t// Adopted from Nuxt.js\n\t\t\t// Reset scrollRestoration to auto when leaving page, allowing page reload\n\t\t\t// and back-navigation from other pages to use the browser to restore the\n\t\t\t// scrolling position.\n\t\t\taddEventListener('beforeunload', (e) => {\n\t\t\t\tlet should_block = false;\n\n\t\t\t\tconst navigation = {\n\t\t\t\t\tfrom: current.url,\n\t\t\t\t\tto: null,\n\t\t\t\t\tcancel: () => (should_block = true)\n\t\t\t\t};\n\n\t\t\t\tcallbacks.before_navigate.forEach((fn) => fn(navigation));\n\n\t\t\t\tif (should_block) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.returnValue = '';\n\t\t\t\t} else {\n\t\t\t\t\thistory.scrollRestoration = 'auto';\n\t\t\t\t}\n\t\t\t});\n\n\t\t\taddEventListener('visibilitychange', () => {\n\t\t\t\tif (document.visibilityState === 'hidden') {\n\t\t\t\t\tupdate_scroll_positions(current_history_index);\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tsessionStorage[SCROLL_KEY] = JSON.stringify(scroll_positions);\n\t\t\t\t\t} catch {\n\t\t\t\t\t\t// do nothing\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/** @param {Event} event */\n\t\t\tconst trigger_prefetch = (event) => {\n\t\t\t\tconst a = find_anchor(event);\n\t\t\t\tif (a && a.href && a.hasAttribute('sveltekit:prefetch')) {\n\t\t\t\t\tprefetch(get_href(a));\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/** @type {NodeJS.Timeout} */\n\t\t\tlet mousemove_timeout;\n\n\t\t\t/** @param {MouseEvent|TouchEvent} event */\n\t\t\tconst handle_mousemove = (event) => {\n\t\t\t\tclearTimeout(mousemove_timeout);\n\t\t\t\tmousemove_timeout = setTimeout(() => {\n\t\t\t\t\t// event.composedPath(), which is used in find_anchor, will be empty if the event is read in a timeout\n\t\t\t\t\t// add a layer of indirection to address that\n\t\t\t\t\tevent.target?.dispatchEvent(\n\t\t\t\t\t\tnew CustomEvent('sveltekit:trigger_prefetch', { bubbles: true })\n\t\t\t\t\t);\n\t\t\t\t}, 20);\n\t\t\t};\n\n\t\t\taddEventListener('touchstart', trigger_prefetch);\n\t\t\taddEventListener('mousemove', handle_mousemove);\n\t\t\taddEventListener('sveltekit:trigger_prefetch', trigger_prefetch);\n\n\t\t\t/** @param {MouseEvent} event */\n\t\t\taddEventListener('click', (event) => {\n\t\t\t\tif (!router_enabled) return;\n\n\t\t\t\t// Adapted from https://github.com/visionmedia/page.js\n\t\t\t\t// MIT license https://github.com/visionmedia/page.js#license\n\t\t\t\tif (event.button || event.which !== 1) return;\n\t\t\t\tif (event.metaKey || event.ctrlKey || event.shiftKey || event.altKey) return;\n\t\t\t\tif (event.defaultPrevented) return;\n\n\t\t\t\tconst a = find_anchor(event);\n\t\t\t\tif (!a) return;\n\n\t\t\t\tif (!a.href) return;\n\n\t\t\t\tconst is_svg_a_element = a instanceof SVGAElement;\n\t\t\t\tconst url = get_href(a);\n\n\t\t\t\t// Ignore if url does not have origin (e.g. `mailto:`, `tel:`.)\n\t\t\t\t// MEMO: Without this condition, firefox will open mailer twice.\n\t\t\t\t// See: https://github.com/sveltejs/kit/issues/4045\n\t\t\t\tif (!is_svg_a_element && url.origin === 'null') return;\n\n\t\t\t\t// Ignore if tag has\n\t\t\t\t// 1. 'download' attribute\n\t\t\t\t// 2. 'rel' attribute includes external\n\t\t\t\tconst rel = (a.getAttribute('rel') || '').split(/\\s+/);\n\n\t\t\t\tif (\n\t\t\t\t\ta.hasAttribute('download') ||\n\t\t\t\t\trel.includes('external') ||\n\t\t\t\t\ta.hasAttribute('sveltekit:reload')\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Ignore if <a> has a target\n\t\t\t\tif (is_svg_a_element ? a.target.baseVal : a.target) return;\n\n\t\t\t\t// Check if new url only differs by hash and use the browser default behavior in that case\n\t\t\t\t// This will ensure the `hashchange` event is fired\n\t\t\t\t// Removing the hash does a full page navigation in the browser, so make sure a hash is present\n\t\t\t\tconst [base, hash] = url.href.split('#');\n\t\t\t\tif (hash !== undefined && base === location.href.split('#')[0]) {\n\t\t\t\t\t// set this flag to distinguish between navigations triggered by\n\t\t\t\t\t// clicking a hash link and those triggered by popstate\n\t\t\t\t\thash_navigating = true;\n\n\t\t\t\t\tupdate_scroll_positions(current_history_index);\n\n\t\t\t\t\tstores.page.set({ ...page, url });\n\t\t\t\t\tstores.page.notify();\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tnavigate({\n\t\t\t\t\turl,\n\t\t\t\t\tscroll: a.hasAttribute('sveltekit:noscroll') ? scroll_state() : null,\n\t\t\t\t\tkeepfocus: false,\n\t\t\t\t\tredirect_chain: [],\n\t\t\t\t\tdetails: {\n\t\t\t\t\t\tstate: {},\n\t\t\t\t\t\treplaceState: url.href === location.href\n\t\t\t\t\t},\n\t\t\t\t\taccepted: () => event.preventDefault(),\n\t\t\t\t\tblocked: () => event.preventDefault()\n\t\t\t\t});\n\t\t\t});\n\n\t\t\taddEventListener('popstate', (event) => {\n\t\t\t\tif (event.state && router_enabled) {\n\t\t\t\t\t// if a popstate-driven navigation is cancelled, we need to counteract it\n\t\t\t\t\t// with history.go, which means we end up back here, hence this check\n\t\t\t\t\tif (event.state[INDEX_KEY] === current_history_index) return;\n\n\t\t\t\t\tnavigate({\n\t\t\t\t\t\turl: new URL(location.href),\n\t\t\t\t\t\tscroll: scroll_positions[event.state[INDEX_KEY]],\n\t\t\t\t\t\tkeepfocus: false,\n\t\t\t\t\t\tredirect_chain: [],\n\t\t\t\t\t\tdetails: null,\n\t\t\t\t\t\taccepted: () => {\n\t\t\t\t\t\t\tcurrent_history_index = event.state[INDEX_KEY];\n\t\t\t\t\t\t},\n\t\t\t\t\t\tblocked: () => {\n\t\t\t\t\t\t\tconst delta = current_history_index - event.state[INDEX_KEY];\n\t\t\t\t\t\t\thistory.go(delta);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\taddEventListener('hashchange', () => {\n\t\t\t\t// if the hashchange happened as a result of clicking on a link,\n\t\t\t\t// we need to update history, otherwise we have to leave it alone\n\t\t\t\tif (hash_navigating) {\n\t\t\t\t\thash_navigating = false;\n\t\t\t\t\thistory.replaceState(\n\t\t\t\t\t\t{ ...history.state, [INDEX_KEY]: ++current_history_index },\n\t\t\t\t\t\t'',\n\t\t\t\t\t\tlocation.href\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t_hydrate: async ({ status, error, nodes, params, routeId }) => {\n\t\t\tconst url = new URL(location.href);\n\n\t\t\t/** @type {Array<import('./types').BranchNode | undefined>} */\n\t\t\tconst branch = [];\n\n\t\t\t/** @type {Record<string, any>} */\n\t\t\tlet stuff = {};\n\n\t\t\t/** @type {import('./types').NavigationResult | undefined} */\n\t\t\tlet result;\n\n\t\t\tlet error_args;\n\n\t\t\ttry {\n\t\t\t\tfor (let i = 0; i < nodes.length; i += 1) {\n\t\t\t\t\tconst is_leaf = i === nodes.length - 1;\n\n\t\t\t\t\tlet props;\n\n\t\t\t\t\tif (is_leaf) {\n\t\t\t\t\t\tconst serialized = document.querySelector('script[sveltekit\\\\:data-type=\"props\"]');\n\t\t\t\t\t\tif (serialized) {\n\t\t\t\t\t\t\tprops = JSON.parse(/** @type {string} */ (serialized.textContent));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst node = await load_node({\n\t\t\t\t\t\tmodule: await components[nodes[i]](),\n\t\t\t\t\t\turl,\n\t\t\t\t\t\tparams,\n\t\t\t\t\t\tstuff,\n\t\t\t\t\t\tstatus: is_leaf ? status : undefined,\n\t\t\t\t\t\terror: is_leaf ? error : undefined,\n\t\t\t\t\t\tprops,\n\t\t\t\t\t\trouteId\n\t\t\t\t\t});\n\n\t\t\t\t\tif (props) {\n\t\t\t\t\t\tnode.uses.dependencies.add(url.href);\n\t\t\t\t\t\tnode.uses.url = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tbranch.push(node);\n\n\t\t\t\t\tif (node && node.loaded) {\n\t\t\t\t\t\tif (node.loaded.error) {\n\t\t\t\t\t\t\tif (error) throw node.loaded.error;\n\t\t\t\t\t\t\terror_args = {\n\t\t\t\t\t\t\t\tstatus: node.loaded.status,\n\t\t\t\t\t\t\t\terror: node.loaded.error,\n\t\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\t\trouteId\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else if (node.loaded.stuff) {\n\t\t\t\t\t\t\tstuff = {\n\t\t\t\t\t\t\t\t...stuff,\n\t\t\t\t\t\t\t\t...node.loaded.stuff\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresult = error_args\n\t\t\t\t\t? await load_root_error_page(error_args)\n\t\t\t\t\t: await get_navigation_result_from_branch({\n\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\tstuff,\n\t\t\t\t\t\t\tbranch,\n\t\t\t\t\t\t\tstatus,\n\t\t\t\t\t\t\terror,\n\t\t\t\t\t\t\trouteId\n\t\t\t\t\t  });\n\t\t\t} catch (e) {\n\t\t\t\tif (error) throw e;\n\n\t\t\t\tresult = await load_root_error_page({\n\t\t\t\t\tstatus: 500,\n\t\t\t\t\terror: coalesce_to_error(e),\n\t\t\t\t\turl,\n\t\t\t\t\trouteId\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (result.redirect) {\n\t\t\t\t// this is a real edge case — `load` would need to return\n\t\t\t\t// a redirect but only in the browser\n\t\t\t\tawait native_navigation(new URL(result.redirect, location.href));\n\t\t\t}\n\n\t\t\tinitialize(result);\n\t\t}\n\t};\n}\n\n/**\n * @param {{\n *   paths: {\n *     assets: string;\n *     base: string;\n *   },\n *   target: Element;\n *   session: any;\n *   route: boolean;\n *   spa: boolean;\n *   trailing_slash: import('types').TrailingSlash;\n *   hydrate: {\n *     status: number;\n *     error: Error;\n *     nodes: number[];\n *     params: Record<string, string>;\n *     routeId: string | null;\n *   };\n * }} opts\n */\nasync function start({ paths, target, session, route, spa, trailing_slash, hydrate }) {\n\tconst client = create_client({\n\t\ttarget,\n\t\tsession,\n\t\tbase: paths.base,\n\t\ttrailing_slash\n\t});\n\n\tinit({ client });\n\tset_paths(paths);\n\n\tif (hydrate) {\n\t\tawait client._hydrate(hydrate);\n\t}\n\n\tif (route) {\n\t\tif (spa) client.goto(location.href, { replaceState: true });\n\t\tclient._start_router();\n\t}\n\n\tdispatchEvent(new CustomEvent('sveltekit:start'));\n}\n\nexport { start };\n"],"file":"start-fb1f0f76.js"}